
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'file_input_endIF ELSE ELIF CASE FOR GIF GELSE GELIF GCASE GFOR DATA TYPE CONTAINER INTERFACE INPUT OUTPUT IN OUT INOUT MASTER SLAVE VARIABLE VAR INSTANCE INS INFIX INFIXR INFIXL IMPORT AS EXCEPT REGISTER CONTEXT OPERATOR FLOATNUMBER STRING_LITERAL INTNUMBER_DEC SIGNED_INTNUMBER_DEC INTNUMBER_HEX SIGNED_INTNUMBER_HEX INTNUMBER_OCT SIGNED_INTNUMBER_OCT INTNUMBER_BIN SIGNED_INTNUMBER_BIN COLON SEMICOLON DUALCOLON INDENT DEDENT WS NEWLINE ENDMARKER ID EQUALS QUESTIONMARK LARROW RARROW BARROW LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA DOT\n    file_input_end : file_input ENDMARKER\n    \n    file_input : package \n               | NEWLINE\n               | package NEWLINE\n    \n    package : module\n    \n    module : statements\n    \n    statements : statements statement_stmt\n    \n    statements : statement_stmt\n    \n    statement_stmt : statement NEWLINE\n                   | statement\n    \n    statement : function_def\n              | function_cons\n              | operator_def\n              | operator_cons\n              | operator_infix\n              | container_def\n              | interface_def\n              | type_def\n              | type_rename\n              | gen_structure\n              | import_decl\n              | register_decl\n              | context_def\n    \n    function_def : identifier argument_list EQUALS suite_indent\n    \n    argument_list : LPAREN arguments RPAREN\n    \n    argument_list : argument_name\n    \n    argument_list : empty\n    \n    arguments : arguments_begin argument_end\n    \n    arguments : argument_end\n    \n    arguments_begin : arguments_begin argument\n    \n    arguments_begin : argument\n    \n    argument_end : argument_name\n    \n    argument_end : empty\n    \n    argument : argument_name COMMA\n    \n    argument_name : ID\n    \n    operator_def : OPERATOR argument_list EQUALS suite_indent\n    \n    operator_def : argument_end OPERATOR argument_end EQUALS statement\n    \n    \n    operator_def : OPERATOR argument_end EQUALS statement\n    \n    \n    function_cons : identifier DUALCOLON cons_indent\n    \n    input_typechain_list : LPAREN typechains RPAREN RARROW\n    \n    input_typechain_list : typechain_one RARROW\n    \n    input_typechain_list : empty\n    \n    output_typechain_list : LPAREN typechain_one RPAREN\n    \n    output_typechain_list : typechain_one\n    \n    typechains : typechains_begin typechain_end\n    \n    typechains : typechain_end\n    \n    typechains_begin : typechains_begin typechain\n    \n    typechains_begin : typechain\n    \n    typechain_end : typechain_one\n    \n    typechain_end : empty\n    \n    typechain : typechain_one COMMA\n    \n    typechain_one : types\n    \n    types : types_begin type_end\n    \n    types : type_end\n    \n    types_begin : types_begin type\n    \n    types_begin : type\n    \n    type_end : type_name\n    \n    type : type_name RARROW\n    \n    type_name : pointer\n    \n    cons_indent : input_typechain_list output_typechain_list NEWLINE\n                | NEWLINE INDENT input_typechain_list output_typechain_list NEWLINE DEDENT \n    \n    \n    operator_cons : operators DUALCOLON cons_indent\n    \n    \n    operator_infix : infix_type_decl precedence operators NEWLINE\n    \n    \n    operators : operators_begin operator_end\n    \n    operators : operator_end\n    \n    operators_begin : operators_begin operator_one\n    \n    operators_begin : operator_one\n    \n    operator_one : OPERATOR COMMA\n    \n    operator_end : OPERATOR\n    \n    infix_type_decl : INFIX\n                    | INFIXR\n                    | INFIXL\n    \n    precedence : INTNUMBER_DEC\n    \n    type_def : DATA type_name EQUALS constructor_list\n    \n    constructor_list : constructors\n    \n    constructors : constructors_begin constructor_end\n    \n    constructors : constructor_end\n    \n    constructors_begin : constructors_begin constructor\n    \n    constructors_begin : constructor\n    \n    constructor_end : constructor_one\n    \n    constructor_one : constructor_name constructor_param_list\n    \n    constructor : constructor_name constructor_param_list QUESTIONMARK\n    \n    constructor_name : ID\n    \n    constructor_param_list : empty\n    \n    constructor_param_list : LPAREN constructor_params RPAREN\n    \n    constructor_params : constructor_params_begin constructor_param_end\n    \n    constructor_params_begin : constructor_params_begin constructor_param_one\n    \n    constructor_params_begin : constructor_param_one\n    \n    constructor_param_end : constructor_param\n    \n    constructor_param_end : empty\n    \n    constructor_param_one : constructor_param COMMA\n    \n    constructor_param : type_name identifier\n    \n    type_rename : TYPE type_name EQUALS type_name\n    \n    import_decl : IMPORT identifier keyword_as keyword_except argument_list\n    \n    keyword_as : AS identifier \n    \n    keyword_as : empty\n    \n    keyword_except : EXCEPT \n    \n    keyword_except : empty\n    \n    \n    register_decl : REGISTER LBRACKET identifier RBRACKET identifier keyword_as keyword_except argument_list\n    \n    \n    gen_structure : gen_if_structure\n        | gen_case_structure\n        | gen_for_structure\n    \n    \n    gen_if_structure : GIF expression COLON gsuite_indent gelifs gels\n    \n    gelifs : gelifs gelif_one\n    \n    gelifs : gelif_one\n    \n    gelifs : empty\n    \n    \n    gelif_one : GELIF expression COLON gsuite_indent\n    \n    \n    gels : GELSE COLON gsuite_indent\n    \n    gels : empty\n    \n    gen_case_structure : GCASE expression COLON case_list_indent\n    \n    gen_for_structure : GFOR identifier IN expression COLON gsuite_indent\n    \n    \n    gsuite_indent : gsuite\n                 | NEWLINE INDENT gsuite DEDENT\n\n    \n    gsuite : case_list\n          | gen_structure\n          | gexpression_stmt\n    \n    gexpression_stmt : gexpression NEWLINE\n    \n    gexpression : unary_operation\n               | binary_operation\n               | LPAREN expression RPAREN\n               | partial_selection\n               | tensor_list\n               | function_call\n               | pointer\n               | identifier\n               | const_expression\n               | OPERATOR\n    \n    pointer : identifier tensor_list\n    \n    \n    context_def : CONTEXT identifier inherit COLON declarations_indent\n    \n    container_def : CONTAINER identifier inherit parameterdef_list bus_list COLON declarations_indent\n    \n    inherit : LBRACE argument_end RBRACE\n    \n    inherit : LBRACE RBRACE\n    \n    inherit : empty\n    \n    parameterdef_list : LBRACKET parameterdefs RBRACKET\n    \n    parameterdef_list : LBRACKET RBRACKET\n    \n    parameterdef_list : empty\n    \n    parameterdefs : parameterdefs_begin parameterdef_end\n    \n    parameterdefs : parameterdef_end\n    \n    parameterdefs_begin : parameterdefs_begin parameterdef\n    \n    parameterdefs_begin : parameterdef\n    \n    parameterdef_end : parameterdef_one\n    \n    parameterdef_end : empty\n    \n    parameterdef : parameterdef_one COMMA\n    \n    parameterdef_one : type_name parameters\n    \n    bus_list : LPAREN buses RPAREN\n    \n    bus_list : LPAREN RPAREN\n    \n    bus_list : empty\n    \n    buses : buses_begin bus_end\n    \n    buses : bus_end\n    \n    buses_begin : buses_begin bus\n    \n    buses_begin : bus\n    \n    bus_end : bus_one\n    \n    bus_end : empty\n    \n    bus : bus_one SEMICOLON\n    \n    bus_one : bus_direction interface_name parameter_list arguments\n    \n    bus_one : port_direction typechain_one parameter_list arguments\n    \n    interface_name : ID\n    \n    port_direction : INPUT \n                   | IN \n                   | OUTPUT \n                   | OUT \n                   | INOUT\n    \n    declarations_indent : declarations\n        | NEWLINE INDENT declarations DEDENT\n    \n    declarations : declarations declaration\n    \n    declarations : declaration\n    \n    \n    declaration : variable_def\n                | anonymous_function_def\n                | instance_def\n    \n    \n    structure : if_structure\n        | case_structure    \n        | for_structure\n    \n    variable_def : keyword_variable types parameter_list pointer initial_value structure_maybe\n    \n    keyword_variable : VARIABLE \n                     | VAR\n    \n    structure_maybe : COLON suite_indent\n    \n    structure_maybe : empty\n    \n    \n    anonymous_function_def : identifier EQUALS suite_indent\n    \n    \n    instance_def : keyword_instance identifier identifier parameter_list instance_port_list\n    \n    keyword_instance : INSTANCE \n                     | INS\n    \n    instance_port_list : LPAREN instance_ports RPAREN\n    \n    instance_port_list : empty\n    \n    instance_ports : instance_ports_begin instance_port_end\n    \n    instance_ports : instance_port_end\n    \n    instance_ports_begin : instance_ports_begin instance_port\n    \n    instance_ports_begin : instance_port\n    \n    instance_port_end : instance_port_one\n    \n    instance_port_end : empty\n    \n    instance_port : instance_port_one COMMA\n    \n    instance_port_one : instance_name\n        | input_instance_port\n        | output_instance_port\n        | inout_instance_port\n    \n    instance_name : expression\n    \n    input_instance_port : partial_selection LARROW expression\n    \n    output_instance_port : partial_selection RARROW partial_selection\n    \n    inout_instance_port : partial_selection BARROW partial_selection\n    \n    \n    partial_selection : identifier tensor_select_list\n    \n    \n    tensor_select_list : LBRACKET expression COLON expression RBRACKET\n    \n    tensor_select_list : tensor_list\n    \n    \n    interface_def : INTERFACE identifier bus_direction parameterdef_list COLON interface_bus_list\n    \n    bus_direction : MASTER \n                  | SLAVE\n    \n    interface_bus_list : interface_buses interface_bus\n    \n    interface_buses : interface_bus\n    \n    interface_bus : bus_one\n    \n    \n    parameter_list : LBRACKET parameters RBRACKET\n    \n    parameter_list : empty\n    \n    parameters : parameters_begin parameter_end\n    \n    parameters : parameter_end\n    \n    parameters_begin : parameters_begin parameter\n    \n    parameters_begin : parameter\n    \n    parameter_end : parameter_one\n    \n    parameter_end : empty\n    \n    parameter : parameter_one COMMA\n    \n    parameter_one : identifier tensor_list LARROW expression\n    \n    parameter_one : identifier tensor_list\n    \n    parameter_one : expression\n    \n    tensor_list : LBRACKET expressions RBRACKET\n    \n    tensor_list : empty\n    \n    if_structure : IF expression COLON suite_indent elifs els\n    \n    elifs : elifs elif_one\n    \n    elifs : elif_one\n    \n    elifs : empty\n    \n    \n    elif_one : ELIF expression COLON suite_indent\n    \n    \n    els : ELSE COLON suite_indent\n    \n    els : empty\n    \n    case_structure : CASE expression COLON case_list_indent\n    \n    for_structure : FOR identifier IN expression COLON suite_indent\n    \n    \n    suite_indent : suite\n                 | NEWLINE INDENT suite DEDENT\n    \n    \n    suite : structure\n          | expression_stmt\n    \n    case_list_indent : case_list\n                     | NEWLINE INDENT case_list DEDENT    \n    \n    case_list : case_list case_entry\n              | case_entry\n    \n    case_entry : expression COLON suite_indent\n    \n    case_entry : gen_structure\n    \n    expression_stmt : expression NEWLINE\n                    | expression\n    \n    expressions : expressions_begin expression_end\n    \n    expressions : expression_end\n    \n    expressions_begin : expressions_begin expression_comma\n    \n    expressions_begin : expression_comma\n    \n    expression_end : expression\n    \n    expression_comma : expression COMMA\n    \n    initial_value : LARROW expression\n    \n    \n    expression : unary_operation\n               | binary_operation\n               | LPAREN expression RPAREN\n               | partial_selection\n               | tensor_list\n               | function_call\n               | pointer\n               | identifier\n               | const_expression\n               | operator_decl\n    \n    operator_decl : OPERATOR\n    \n    unary_operation : OPERATOR expression\n    \n    binary_operation : expression OPERATOR expression\n    \n    \n    function_call : identifier instance_port_list\n    \n    \n    const_expression : int_number\n        | float_number\n        | string_literal\n    \n    \n    int_number : INTNUMBER_DEC\n        | SIGNED_INTNUMBER_DEC\n        | INTNUMBER_BIN\n        | SIGNED_INTNUMBER_BIN\n        | INTNUMBER_OCT\n        | SIGNED_INTNUMBER_OCT\n        | INTNUMBER_HEX\n        | SIGNED_INTNUMBER_HEX\n    \n    \n    string_literal : STRING_LITERAL\n    \n    \n    float_number : FLOATNUMBER\n    \n    \n    identifier : scopes ID\n               | ID\n    \n    scopes : scopes scope\n           | scope\n    \n    scope : ID DOT\n    \n    scope : pointer DOT\n    \n    empty : \n    '
    
_lr_action_items = {'NEWLINE':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,42,54,55,57,58,60,63,70,74,77,78,80,83,86,88,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,143,144,153,155,158,159,161,162,163,166,167,168,170,171,173,174,175,176,177,178,182,184,193,196,197,198,199,200,204,205,207,214,215,217,219,220,221,222,223,224,225,226,228,230,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,263,264,266,268,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,321,322,323,326,334,336,337,339,340,342,369,372,379,380,381,385,386,387,389,392,399,400,401,402,405,410,411,412,419,420,427,428,432,433,434,435,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[4,53,-5,-6,-8,55,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-65,-7,-9,121,-128,-26,-35,121,-278,-59,-283,-283,-277,-64,-69,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,172,-39,-52,-54,-57,-283,-29,-31,-32,172,-62,207,-283,-96,232,-283,-199,-263,-128,-183,-261,265,-24,-231,-233,-234,-170,-171,-172,269,273,-44,-53,-25,-28,-30,-34,-220,-36,-38,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,305,-283,-112,-114,-115,-116,-238,323,-125,-118,-119,-121,-122,-123,-124,-126,-127,-262,-252,-110,-235,-240,-283,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,172,-283,-105,-106,-283,-237,-117,-182,232,172,265,-43,404,305,-202,-207,-283,172,-165,-239,-103,-104,-109,-120,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,232,232,-113,-200,-236,-283,-224,-225,172,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,172,172,-173,172,-177,-249,-227,-226,-176,]),'OPERATOR':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,31,32,33,38,39,40,41,46,47,50,54,55,58,60,62,63,66,71,72,74,77,78,80,83,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,118,119,125,127,129,131,132,133,134,136,138,139,140,141,143,153,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,193,196,197,198,199,200,202,203,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,229,230,231,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,252,254,256,261,262,263,264,266,267,268,269,270,271,273,280,291,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,320,321,322,323,324,325,326,328,329,330,333,334,336,337,338,362,364,366,367,368,369,372,379,380,381,385,386,387,389,390,392,393,394,398,399,400,401,402,403,405,410,411,412,414,415,416,417,418,419,420,427,428,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,453,454,455,456,457,458,459,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,],[23,23,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,69,-100,-101,-102,-35,-32,-33,88,100,100,-67,-7,-9,-128,-26,100,-35,-68,88,-73,-278,-59,-283,-283,-277,-66,159,-250,-251,100,-253,-254,-255,-256,-257,-258,-259,100,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,159,100,-39,-52,-54,-57,-283,-29,-31,-32,100,-246,159,100,23,-62,-283,-96,247,100,159,-199,-263,-128,100,100,-183,159,100,100,-24,-231,-233,-234,-170,-171,-172,159,100,100,-53,-25,-28,-30,-34,-220,-245,-248,-36,-38,23,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,159,-283,-112,100,-115,-116,-238,-257,-250,-251,100,-253,-254,-255,-256,-258,100,159,-252,159,100,-187,-221,159,-253,-110,100,-240,159,100,-241,159,159,-60,-37,100,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,100,-283,-105,-106,100,247,-237,-117,159,100,-182,-186,-190,100,100,247,100,100,100,100,-213,-221,-257,159,-202,-207,-283,100,-165,-239,-103,-104,-109,159,-252,159,159,100,-111,-232,-283,-229,159,-130,-283,-157,-283,-212,-216,-128,100,-183,-205,-85,-283,-178,100,-209,-283,247,247,-113,-200,-236,-283,-224,-225,100,100,-61,-283,-283,100,159,-99,-164,-283,100,-209,-108,-107,-222,-223,-228,159,-230,-155,-156,159,-283,100,-208,-179,-183,159,100,100,-173,100,-177,159,-227,-226,-176,]),'CONTAINER':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,369,372,379,380,381,385,386,387,389,399,400,401,402,405,410,411,412,419,420,427,428,432,433,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[27,27,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,27,-62,-283,-96,-283,-199,-263,-128,-183,-261,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,27,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,-114,-115,-116,-238,-262,-252,-110,-235,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,-237,-117,-182,-283,-202,-207,-283,-283,-165,-239,-103,-104,-109,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'INTERFACE':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,369,372,379,380,381,385,386,387,389,399,400,401,402,405,410,411,412,419,420,427,428,432,433,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[28,28,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,28,-62,-283,-96,-283,-199,-263,-128,-183,-261,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,28,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,-114,-115,-116,-238,-262,-252,-110,-235,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,-237,-117,-182,-283,-202,-207,-283,-283,-165,-239,-103,-104,-109,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'DATA':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,369,372,379,380,381,385,386,387,389,399,400,401,402,405,410,411,412,419,420,427,428,432,433,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[29,29,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,29,-62,-283,-96,-283,-199,-263,-128,-183,-261,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,29,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,-114,-115,-116,-238,-262,-252,-110,-235,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,-237,-117,-182,-283,-202,-207,-283,-283,-165,-239,-103,-104,-109,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'TYPE':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,369,372,379,380,381,385,386,387,389,399,400,401,402,405,410,411,412,419,420,427,428,432,433,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[30,30,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,30,-62,-283,-96,-283,-199,-263,-128,-183,-261,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,30,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,-114,-115,-116,-238,-262,-252,-110,-235,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,-237,-117,-182,-283,-202,-207,-283,-283,-165,-239,-103,-104,-109,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'IMPORT':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,369,372,379,380,381,385,386,387,389,399,400,401,402,405,410,411,412,419,420,427,428,432,433,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[34,34,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,34,-62,-283,-96,-283,-199,-263,-128,-183,-261,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,34,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,-114,-115,-116,-238,-262,-252,-110,-235,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,-237,-117,-182,-283,-202,-207,-283,-283,-165,-239,-103,-104,-109,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'REGISTER':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,369,372,379,380,381,385,386,387,389,399,400,401,402,405,410,411,412,419,420,427,428,432,433,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[35,35,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,35,-62,-283,-96,-283,-199,-263,-128,-183,-261,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,35,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,-114,-115,-116,-238,-262,-252,-110,-235,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,-237,-117,-182,-283,-202,-207,-283,-283,-165,-239,-103,-104,-109,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'CONTEXT':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,369,372,379,380,381,385,386,387,389,399,400,401,402,405,410,411,412,419,420,427,428,432,433,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[36,36,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,36,-62,-283,-96,-283,-199,-263,-128,-183,-261,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,36,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,-114,-115,-116,-238,-262,-252,-110,-235,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,-237,-117,-182,-283,-202,-207,-283,-283,-165,-239,-103,-104,-109,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'ID':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,28,29,30,31,32,33,34,36,37,38,40,46,47,48,49,54,55,57,58,59,60,62,63,69,70,74,77,78,80,81,83,84,85,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,117,118,119,120,122,124,125,126,127,128,129,131,132,133,134,136,138,140,141,143,146,149,150,151,152,153,154,155,158,159,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,183,185,187,189,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,209,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,233,234,235,236,241,247,248,249,252,254,263,264,266,268,269,273,275,278,279,280,286,288,291,294,295,296,297,298,299,300,301,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,328,329,330,331,332,333,334,336,337,338,341,342,350,351,352,353,354,355,356,359,360,362,364,369,372,373,375,376,378,379,380,381,382,383,384,385,386,387,389,398,399,400,401,402,405,410,411,412,414,415,417,419,420,422,425,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,450,453,454,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[38,38,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,63,63,74,74,74,74,-100,-101,-102,74,74,83,-278,-33,74,74,74,-280,-7,-9,74,-128,63,-26,74,-35,63,74,-278,-59,-283,-283,74,-277,-279,-281,-250,-251,74,-253,-254,-255,-256,-257,-258,-259,74,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-282,74,-39,74,74,-42,-52,74,-54,-56,-57,63,-29,-31,-32,74,-246,74,38,-62,63,-203,-204,221,74,-283,74,-96,74,74,-199,-263,-128,74,74,-183,-261,74,74,-24,-231,-233,-234,-170,-171,-172,-242,74,74,74,74,74,74,-48,-41,-53,-55,-58,-25,-28,-30,-34,-220,-245,-248,-36,-38,38,-63,74,-74,-75,221,-77,-79,-80,-283,-83,-93,63,-97,-98,-95,74,74,-283,-112,74,-115,-116,-238,74,74,-262,-252,74,-187,-110,74,-240,74,-241,-60,74,-47,-51,-37,74,-140,74,-76,-78,-81,-84,74,-94,-27,-283,-129,74,-166,-167,-168,-169,74,74,-174,-175,-180,-181,74,-283,-105,-106,74,74,-237,-117,74,-182,-186,-190,74,74,74,74,74,74,74,74,-40,74,411,74,-158,-159,-160,-161,-162,-139,-143,74,-213,-202,-207,-82,74,-88,74,-283,74,-165,74,-283,74,-239,-103,-104,-109,74,-111,-232,-283,-229,-130,-283,-157,-283,-212,-216,74,-205,-85,-87,-91,63,-178,74,74,74,-209,-283,74,74,-113,-200,-236,-283,-224,-225,74,74,-61,63,63,74,-99,-164,-283,74,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,74,-208,-179,-183,74,74,-173,74,-177,-249,-227,-226,-176,]),'INFIX':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,369,372,379,380,381,385,386,387,389,399,400,401,402,405,410,411,412,419,420,427,428,432,433,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[43,43,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,43,-62,-283,-96,-283,-199,-263,-128,-183,-261,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,43,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,-114,-115,-116,-238,-262,-252,-110,-235,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,-237,-117,-182,-283,-202,-207,-283,-283,-165,-239,-103,-104,-109,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'INFIXR':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,369,372,379,380,381,385,386,387,389,399,400,401,402,405,410,411,412,419,420,427,428,432,433,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[44,44,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,44,-62,-283,-96,-283,-199,-263,-128,-183,-261,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,44,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,-114,-115,-116,-238,-262,-252,-110,-235,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,-237,-117,-182,-283,-202,-207,-283,-283,-165,-239,-103,-104,-109,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'INFIXL':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,369,372,379,380,381,385,386,387,389,399,400,401,402,405,410,411,412,419,420,427,428,432,433,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[45,45,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,45,-62,-283,-96,-283,-199,-263,-128,-183,-261,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,45,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,-114,-115,-116,-238,-262,-252,-110,-235,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,-237,-117,-182,-283,-202,-207,-283,-283,-165,-239,-103,-104,-109,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'GIF':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,158,159,161,162,163,166,167,168,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,321,322,323,326,333,334,336,337,369,372,379,380,381,385,386,387,389,398,399,400,401,402,405,410,411,412,419,420,427,428,432,433,434,435,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[46,46,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,46,-62,-283,-96,46,-283,-199,-263,-128,-183,-261,46,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,46,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,46,-115,-116,-238,-262,-252,-110,46,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,46,-237,-117,-182,46,46,-283,46,-202,-207,-283,-283,-165,-239,-103,-104,-109,46,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,46,46,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'GCASE':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,158,159,161,162,163,166,167,168,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,321,322,323,326,333,334,336,337,369,372,379,380,381,385,386,387,389,398,399,400,401,402,405,410,411,412,419,420,427,428,432,433,434,435,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[47,47,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,47,-62,-283,-96,47,-283,-199,-263,-128,-183,-261,47,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,47,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,47,-115,-116,-238,-262,-252,-110,47,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,47,-237,-117,-182,47,47,-283,47,-202,-207,-283,-283,-165,-239,-103,-104,-109,47,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,47,47,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'GFOR':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,77,78,80,83,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,118,119,125,127,129,131,132,133,134,140,141,143,153,155,158,159,161,162,163,166,167,168,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,321,322,323,326,333,334,336,337,369,372,379,380,381,385,386,387,389,398,399,400,401,402,405,410,411,412,419,420,427,428,432,433,434,435,436,437,438,439,440,441,443,444,445,446,449,450,453,455,456,457,458,459,461,463,464,465,467,468,469,470,471,473,474,475,476,477,478,479,480,481,],[48,48,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-278,-59,-283,-283,-277,-250,-251,-253,-254,-255,-256,-257,-258,-259,-260,-221,-264,-265,-266,-267,-268,-269,-270,-271,-272,-273,-274,-276,-275,-283,-39,-52,-54,-57,-283,-29,-31,-32,-283,48,-62,-283,-96,48,-283,-199,-263,-128,-183,-261,48,-24,-231,-233,-234,-170,-171,-172,-242,-53,-25,-28,-30,-34,-220,-36,-38,48,-63,-74,-75,-77,-80,-283,-83,-93,-283,-97,-98,-95,-283,-112,48,-115,-116,-238,-262,-252,-110,48,-240,-241,-60,-37,-76,-81,-84,-94,-27,-283,-129,-163,-166,-167,-168,-169,-283,-283,-105,-106,48,-237,-117,-182,48,48,-283,48,-202,-207,-283,-283,-165,-239,-103,-104,-109,48,-111,-232,-283,-229,-130,-283,-157,-283,-205,-85,-283,-178,-209,-283,48,48,-113,-200,-236,-283,-224,-225,-283,-61,-283,-283,-99,-164,-283,-209,-108,-107,-222,-223,-228,-230,-155,-156,-283,-283,-208,-179,-183,-283,-283,-173,-283,-177,-249,-227,-226,-176,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file_input_end':([0,],[1,]),'file_input':([0,],[2,]),'package':([0,],[3,]),'module':([0,],[5,]),'statements':([0,],[6,]),'statement_stmt':([0,6,],[7,54,]),'statement':([0,6,141,206,],[8,8,205,280,]),'function_def':([0,6,141,206,],[9,9,9,9,]),'function_cons':([0,6,141,206,],[10,10,10,10,]),'operator_def':([0,6,141,206,],[11,11,11,11,]),'operator_cons':([0,6,141,206,],[12,12,12,12,]),'operator_infix':([0,6,141,206,],[13,13,13,13,]),'container_def':([0,6,141,206,],[14,14,14,14,]),'interface_def':([0,6,141,206,],[15,15,15,15,]),'type_def':([0,6,141,206,],[16,16,16,16,]),'type_rename':([0,6,141,206,],[17,17,17,17,]),'gen_structure':([0,6,141,158,168,206,233,264,321,333,334,337,398,434,435,],[18,18,18,234,266,18,266,266,234,266,234,266,266,234,234,]),'import_decl':([0,6,141,206,],[19,19,19,19,]),'register_decl':([0,6,141,206,],[20,20,20,20,]),'context_def':([0,6,141,206,],[21,21,21,21,]),'identifier':([0,6,27,28,29,30,34,36,37,46,47,48,57,62,70,81,92,100,118,120,122,126,136,140,141,152,154,158,159,164,165,168,169,179,180,181,183,185,187,206,209,227,228,233,241,247,252,264,268,275,286,291,298,304,310,311,316,320,321,325,330,331,332,333,334,336,337,338,342,351,362,375,378,380,382,384,398,417,429,430,431,434,435,442,443,447,454,468,473,474,476,],[22,22,73,75,78,78,80,82,78,97,97,116,78,97,78,156,97,97,97,78,78,78,97,97,22,78,226,238,97,97,97,97,97,97,97,272,78,78,78,22,78,301,302,97,97,97,97,97,97,78,78,367,78,302,78,384,97,97,238,97,97,396,396,97,238,97,97,97,302,78,367,78,426,97,302,433,97,97,302,78,367,238,238,97,97,97,367,97,97,97,97,]),'argument_end':([0,6,23,59,69,131,141,146,206,445,446,],[24,24,65,132,142,197,24,211,24,132,132,]),'operators':([0,6,71,141,206,],[25,25,144,25,25,]),'infix_type_decl':([0,6,141,206,],[26,26,26,26,]),'gen_if_structure':([0,6,141,158,168,206,233,264,321,333,334,337,398,434,435,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'gen_case_structure':([0,6,141,158,168,206,233,264,321,333,334,337,398,434,435,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'gen_for_structure':([0,6,141,158,168,206,233,264,321,333,334,337,398,434,435,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'scopes':([0,6,27,28,29,30,34,36,37,46,47,48,57,62,70,81,92,100,118,120,122,126,136,140,141,152,154,158,159,164,165,168,169,179,180,181,183,185,187,206,209,227,228,233,241,247,252,264,268,275,286,291,298,304,310,311,316,320,321,325,330,331,332,333,334,336,337,338,342,351,362,375,378,380,382,384,398,417,429,430,431,434,435,442,443,447,454,468,473,474,476,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'argument_name':([0,6,22,23,59,69,131,141,146,206,223,427,445,446,],[39,39,60,67,134,39,134,39,39,39,60,60,134,134,]),'empty':([0,6,22,23,46,47,57,59,62,69,70,73,75,78,80,82,92,97,100,116,118,122,131,136,140,141,145,146,148,153,156,158,159,164,165,168,169,179,180,185,187,206,208,209,220,223,226,230,233,238,241,247,252,264,268,272,282,286,291,301,302,316,317,320,321,325,330,333,334,336,337,338,345,362,367,375,379,380,383,384,396,398,401,410,412,417,426,427,431,433,434,435,439,442,443,445,446,447,453,454,467,468,473,474,476,],[40,40,61,68,101,101,124,40,101,40,124,147,101,101,155,147,101,166,101,101,101,191,40,101,101,40,210,40,210,225,101,101,101,101,256,101,101,101,101,124,191,40,283,290,297,300,101,319,101,166,101,101,256,101,101,101,349,290,366,155,101,101,389,101,101,101,101,101,101,101,101,101,349,366,418,424,225,101,432,101,101,101,441,432,432,101,101,300,366,455,101,101,461,101,101,40,40,101,471,366,477,101,101,101,101,]),'operators_begin':([0,6,71,141,206,],[41,41,41,41,41,]),'operator_end':([0,6,41,71,141,206,],[42,42,86,42,42,42,]),'scope':([0,6,27,28,29,30,34,36,37,46,47,48,57,62,70,81,92,100,118,120,122,126,136,140,141,152,154,158,159,164,165,168,169,179,180,181,183,185,187,206,209,227,228,233,241,247,252,264,268,275,286,291,298,304,310,311,316,320,321,325,330,331,332,333,334,336,337,338,342,351,362,375,378,380,382,384,398,417,429,430,431,434,435,442,443,447,454,468,473,474,476,],[49,49,49,49,49,49,49,49,84,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'operator_one':([0,6,41,71,141,206,],[50,50,87,50,50,50,]),'pointer':([0,6,27,28,29,30,34,36,37,46,47,48,57,62,70,81,92,100,118,120,122,126,136,140,141,152,154,158,159,164,165,168,169,179,180,181,183,185,187,206,209,227,228,233,241,247,252,264,268,275,286,291,298,304,310,311,316,320,321,325,330,331,332,333,334,336,337,338,342,351,362,375,378,380,382,384,398,417,429,430,431,434,435,442,443,447,454,468,473,474,476,],[51,51,51,51,77,77,51,51,51,96,96,51,77,96,77,51,96,96,96,77,77,77,96,96,51,77,51,245,96,96,96,96,96,96,96,51,77,77,77,51,77,51,51,96,96,96,96,96,96,77,77,96,77,51,77,51,96,96,245,96,96,51,51,96,245,96,96,96,51,77,96,77,51,96,51,51,96,96,51,451,96,245,245,96,96,96,96,96,96,96,96,]),'argument_list':([22,23,223,427,],[56,64,299,449,]),'tensor_list':([22,46,47,62,73,75,78,80,82,92,97,100,116,118,136,140,156,158,159,164,165,168,169,179,180,226,233,238,241,247,252,264,268,272,291,301,302,316,320,321,325,330,333,334,336,337,338,362,367,380,384,396,398,417,426,431,433,434,435,442,443,447,454,468,473,474,476,],[58,94,94,94,58,58,58,58,58,94,163,94,58,94,94,94,58,243,94,94,94,94,94,94,94,58,94,163,94,94,94,94,94,58,94,58,58,94,94,243,94,94,94,243,94,94,94,94,416,94,58,163,94,94,58,94,58,243,243,94,94,94,94,94,94,94,94,]),'precedence':([26,],[71,]),'type_name':([29,30,57,70,120,122,126,152,183,185,187,209,275,286,298,310,351,375,],[76,79,129,129,129,129,129,222,129,129,129,291,129,291,378,129,129,378,]),'expression':([46,47,62,92,100,118,136,140,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,380,398,417,431,434,435,442,443,447,454,468,473,474,476,],[89,115,139,160,167,178,139,178,229,248,250,261,229,267,270,271,229,324,167,261,229,178,368,178,390,229,393,394,229,229,178,229,403,368,178,229,448,368,229,229,462,178,466,472,478,178,178,178,]),'unary_operation':([46,47,62,92,100,118,136,140,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,380,398,417,431,434,435,442,443,447,454,468,473,474,476,],[90,90,90,90,90,90,90,90,239,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,239,90,90,90,239,90,90,90,90,90,90,90,90,239,239,90,90,90,90,90,90,90,90,]),'binary_operation':([46,47,62,92,100,118,136,140,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,380,398,417,431,434,435,442,443,447,454,468,473,474,476,],[91,91,91,91,91,91,91,91,240,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,240,91,91,91,240,91,91,91,91,91,91,91,91,240,240,91,91,91,91,91,91,91,91,]),'partial_selection':([46,47,62,92,100,118,136,140,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,331,332,333,334,336,337,338,362,380,398,417,431,434,435,442,443,447,454,468,473,474,476,],[93,93,93,93,93,93,93,93,242,93,93,262,93,93,93,93,93,93,93,262,93,93,93,93,93,242,93,93,395,397,93,242,93,93,93,93,93,93,93,93,242,242,93,93,93,93,93,93,93,93,]),'function_call':([46,47,62,92,100,118,136,140,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,380,398,417,431,434,435,442,443,447,454,468,473,474,476,],[95,95,95,95,95,95,95,95,244,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,244,95,95,95,244,95,95,95,95,95,95,95,95,244,244,95,95,95,95,95,95,95,95,]),'const_expression':([46,47,62,92,100,118,136,140,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,380,398,417,431,434,435,442,443,447,454,468,473,474,476,],[98,98,98,98,98,98,98,98,246,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,246,98,98,98,246,98,98,98,98,98,98,98,98,246,246,98,98,98,98,98,98,98,98,]),'operator_decl':([46,47,62,92,100,118,136,140,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,380,398,417,431,434,435,442,443,447,454,468,473,474,476,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'int_number':([46,47,62,92,100,118,136,140,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,380,398,417,431,434,435,442,443,447,454,468,473,474,476,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'float_number':([46,47,62,92,100,118,136,140,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,380,398,417,431,434,435,442,443,447,454,468,473,474,476,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'string_literal':([46,47,62,92,100,118,136,140,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,380,398,417,431,434,435,442,443,447,454,468,473,474,476,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'cons_indent':([57,70,],[119,143,]),'input_typechain_list':([57,70,185,],[120,120,275,]),'typechain_one':([57,70,120,122,183,185,187,275,351,],[123,123,184,190,274,123,190,184,412,]),'types':([57,70,120,122,183,185,187,275,310,351,],[125,125,125,125,125,125,125,125,383,125,]),'types_begin':([57,70,120,122,183,185,187,275,310,351,],[126,126,126,126,126,126,126,126,126,126,]),'type_end':([57,70,120,122,126,183,185,187,275,310,351,],[127,127,127,127,193,127,127,127,127,127,127,]),'type':([57,70,120,122,126,183,185,187,275,310,351,],[128,128,128,128,194,128,128,128,128,128,128,]),'arguments':([59,445,446,],[130,464,465,]),'arguments_begin':([59,445,446,],[131,131,131,]),'argument':([59,131,445,446,],[133,198,133,133,]),'expressions':([62,164,417,454,],[135,135,135,135,]),'expressions_begin':([62,164,417,454,],[136,136,136,136,]),'expression_end':([62,136,164,417,454,],[137,201,137,137,137,]),'expression_comma':([62,136,164,417,454,],[138,202,138,138,138,]),'inherit':([73,82,],[145,157,]),'bus_direction':([75,282,293,345,370,],[148,350,350,350,350,]),'keyword_as':([80,301,],[153,379,]),'tensor_select_list':([97,238,367,396,],[161,161,161,161,]),'instance_port_list':([97,238,367,453,],[162,162,162,470,]),'suite_indent':([118,140,316,336,380,443,473,474,476,],[170,204,385,401,428,463,479,480,481,]),'suite':([118,140,268,316,336,380,443,473,474,476,],[171,171,335,171,171,171,171,171,171,171,]),'structure':([118,140,268,316,336,380,443,473,474,476,],[173,173,173,173,173,173,173,173,173,173,]),'expression_stmt':([118,140,268,316,336,380,443,473,474,476,],[174,174,174,174,174,174,174,174,174,174,]),'if_structure':([118,140,268,316,336,380,443,473,474,476,],[175,175,175,175,175,175,175,175,175,175,]),'case_structure':([118,140,268,316,336,380,443,473,474,476,],[176,176,176,176,176,176,176,176,176,176,]),'for_structure':([118,140,268,316,336,380,443,473,474,476,],[177,177,177,177,177,177,177,177,177,177,]),'output_typechain_list':([120,275,],[182,340,]),'typechains':([122,],[186,]),'typechains_begin':([122,],[187,]),'typechain_end':([122,187,],[188,277,]),'typechain':([122,187,],[189,278,]),'parameterdef_list':([145,148,],[208,213,]),'constructor_list':([151,],[214,]),'constructors':([151,],[215,]),'constructors_begin':([151,],[216,]),'constructor_end':([151,216,],[217,294,]),'constructor':([151,216,],[218,295,]),'constructor_one':([151,216,],[219,219,]),'constructor_name':([151,216,],[220,220,]),'keyword_except':([153,379,],[223,427,]),'gsuite_indent':([158,334,434,435,],[230,399,456,457,]),'gsuite':([158,321,334,434,435,],[231,391,231,231,231,]),'case_list':([158,168,321,333,334,337,434,435,],[233,264,233,398,233,264,233,233,]),'gexpression_stmt':([158,321,334,434,435,],[235,235,235,235,235,]),'case_entry':([158,168,233,264,321,333,334,337,398,434,435,],[236,236,322,322,236,236,236,236,322,236,236,]),'gexpression':([158,321,334,434,435,],[237,237,237,237,237,]),'instance_ports':([165,],[251,]),'instance_ports_begin':([165,],[252,]),'instance_port_end':([165,252,],[253,327,]),'instance_port':([165,252,],[254,328,]),'instance_port_one':([165,252,],[255,255,]),'instance_name':([165,252,],[257,257,]),'input_instance_port':([165,252,],[258,258,]),'output_instance_port':([165,252,],[259,259,]),'inout_instance_port':([165,252,],[260,260,]),'case_list_indent':([168,337,],[263,402,]),'bus_list':([208,],[281,]),'parameterdefs':([209,],[284,]),'parameterdefs_begin':([209,],[286,]),'parameterdef_end':([209,286,],[287,358,]),'parameterdef':([209,286,],[288,359,]),'parameterdef_one':([209,286,],[289,289,]),'constructor_param_list':([220,],[296,]),'declarations_indent':([228,342,],[303,405,]),'declarations':([228,342,382,],[304,304,429,]),'declaration':([228,304,342,382,429,],[306,381,306,306,381,]),'variable_def':([228,304,342,382,429,],[307,307,307,307,307,]),'anonymous_function_def':([228,304,342,382,429,],[308,308,308,308,308,]),'instance_def':([228,304,342,382,429,],[309,309,309,309,309,]),'keyword_variable':([228,304,342,382,429,],[310,310,310,310,310,]),'keyword_instance':([228,304,342,382,429,],[311,311,311,311,311,]),'gelifs':([230,],[317,]),'gelif_one':([230,317,],[318,387,]),'buses':([282,],[343,]),'buses_begin':([282,],[345,]),'bus_end':([282,345,],[346,407,]),'bus':([282,345,],[347,408,]),'bus_one':([282,293,345,370,],[348,372,348,372,]),'port_direction':([282,293,345,370,],[351,351,351,351,]),'parameters':([291,431,454,],[361,452,452,]),'parameters_begin':([291,431,454,],[362,362,362,]),'parameter_end':([291,362,431,454,],[363,413,363,363,]),'parameter':([291,362,431,454,],[364,414,364,364,]),'parameter_one':([291,362,431,454,],[365,365,365,365,]),'interface_bus_list':([293,],[369,]),'interface_buses':([293,],[370,]),'interface_bus':([293,370,],[371,419,]),'constructor_params':([298,],[374,]),'constructor_params_begin':([298,],[375,]),'constructor_param_one':([298,375,],[376,422,]),'constructor_param':([298,375,],[377,423,]),'gels':([317,],[386,]),'interface_name':([350,],[410,]),'constructor_param_end':([375,],[421,]),'parameter_list':([383,410,412,433,],[430,445,446,453,]),'elifs':([401,],[439,]),'elif_one':([401,439,],[440,459,]),'els':([439,],[458,]),'initial_value':([451,],[467,]),'structure_maybe':([467,],[475,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file_input_end","S'",1,None,None,None),
  ('file_input_end -> file_input ENDMARKER','file_input_end',2,'p_file_input_end','parser.py',8),
  ('file_input -> package','file_input',1,'p_file_input','parser.py',15),
  ('file_input -> NEWLINE','file_input',1,'p_file_input','parser.py',16),
  ('file_input -> package NEWLINE','file_input',2,'p_file_input','parser.py',17),
  ('package -> module','package',1,'p_package','parser.py',30),
  ('module -> statements','module',1,'p_module','parser.py',38),
  ('statements -> statements statement_stmt','statements',2,'p_statements','parser.py',46),
  ('statements -> statement_stmt','statements',1,'p_statements_one','parser.py',60),
  ('statement_stmt -> statement NEWLINE','statement_stmt',2,'p_statement_stmt','parser.py',68),
  ('statement_stmt -> statement','statement_stmt',1,'p_statement_stmt','parser.py',69),
  ('statement -> function_def','statement',1,'p_statement','parser.py',77),
  ('statement -> function_cons','statement',1,'p_statement','parser.py',78),
  ('statement -> operator_def','statement',1,'p_statement','parser.py',79),
  ('statement -> operator_cons','statement',1,'p_statement','parser.py',80),
  ('statement -> operator_infix','statement',1,'p_statement','parser.py',81),
  ('statement -> container_def','statement',1,'p_statement','parser.py',82),
  ('statement -> interface_def','statement',1,'p_statement','parser.py',83),
  ('statement -> type_def','statement',1,'p_statement','parser.py',84),
  ('statement -> type_rename','statement',1,'p_statement','parser.py',85),
  ('statement -> gen_structure','statement',1,'p_statement','parser.py',86),
  ('statement -> import_decl','statement',1,'p_statement','parser.py',87),
  ('statement -> register_decl','statement',1,'p_statement','parser.py',88),
  ('statement -> context_def','statement',1,'p_statement','parser.py',89),
  ('function_def -> identifier argument_list EQUALS suite_indent','function_def',4,'p_function_def','parser.py',97),
  ('argument_list -> LPAREN arguments RPAREN','argument_list',3,'p_argument_list','parser.py',105),
  ('argument_list -> argument_name','argument_list',1,'p_argument_list_one','parser.py',113),
  ('argument_list -> empty','argument_list',1,'p_argument_list_empty','parser.py',121),
  ('arguments -> arguments_begin argument_end','arguments',2,'p_arguments','parser.py',129),
  ('arguments -> argument_end','arguments',1,'p_arguments_one','parser.py',140),
  ('arguments_begin -> arguments_begin argument','arguments_begin',2,'p_arguments_begin','parser.py',148),
  ('arguments_begin -> argument','arguments_begin',1,'p_arguments_begin_one','parser.py',156),
  ('argument_end -> argument_name','argument_end',1,'p_argument_end','parser.py',164),
  ('argument_end -> empty','argument_end',1,'p_argument_end_empty','parser.py',172),
  ('argument -> argument_name COMMA','argument',2,'p_argument','parser.py',180),
  ('argument_name -> ID','argument_name',1,'p_argument_name','parser.py',188),
  ('operator_def -> OPERATOR argument_list EQUALS suite_indent','operator_def',4,'p_operator_def','parser.py',196),
  ('operator_def -> argument_end OPERATOR argument_end EQUALS statement','operator_def',5,'p_operator_def_binary','parser.py',204),
  ('operator_def -> OPERATOR argument_end EQUALS statement','operator_def',4,'p_operator_def_unary','parser.py',213),
  ('function_cons -> identifier DUALCOLON cons_indent','function_cons',3,'p_function_cons','parser.py',222),
  ('input_typechain_list -> LPAREN typechains RPAREN RARROW','input_typechain_list',4,'p_input_typechain_list','parser.py',230),
  ('input_typechain_list -> typechain_one RARROW','input_typechain_list',2,'p_input_typechain_list_one','parser.py',238),
  ('input_typechain_list -> empty','input_typechain_list',1,'p_input_typechain_list_empty','parser.py',246),
  ('output_typechain_list -> LPAREN typechain_one RPAREN','output_typechain_list',3,'p_output_typechain_list_paren','parser.py',254),
  ('output_typechain_list -> typechain_one','output_typechain_list',1,'p_output_typechain_list','parser.py',262),
  ('typechains -> typechains_begin typechain_end','typechains',2,'p_typechains','parser.py',270),
  ('typechains -> typechain_end','typechains',1,'p_typechains_one','parser.py',281),
  ('typechains_begin -> typechains_begin typechain','typechains_begin',2,'p_typechains_begin','parser.py',292),
  ('typechains_begin -> typechain','typechains_begin',1,'p_typechains_begin_one','parser.py',300),
  ('typechain_end -> typechain_one','typechain_end',1,'p_typechain_end','parser.py',308),
  ('typechain_end -> empty','typechain_end',1,'p_typechain_end_empty','parser.py',316),
  ('typechain -> typechain_one COMMA','typechain',2,'p_typechain','parser.py',324),
  ('typechain_one -> types','typechain_one',1,'p_typechain_one','parser.py',332),
  ('types -> types_begin type_end','types',2,'p_types','parser.py',340),
  ('types -> type_end','types',1,'p_types_one','parser.py',348),
  ('types_begin -> types_begin type','types_begin',2,'p_types_begin','parser.py',356),
  ('types_begin -> type','types_begin',1,'p_types_begin_one','parser.py',364),
  ('type_end -> type_name','type_end',1,'p_type_end','parser.py',372),
  ('type -> type_name RARROW','type',2,'p_type','parser.py',380),
  ('type_name -> pointer','type_name',1,'p_type_name','parser.py',388),
  ('cons_indent -> input_typechain_list output_typechain_list NEWLINE','cons_indent',3,'p_cons_indent','parser.py',396),
  ('cons_indent -> NEWLINE INDENT input_typechain_list output_typechain_list NEWLINE DEDENT','cons_indent',6,'p_cons_indent','parser.py',397),
  ('operator_cons -> operators DUALCOLON cons_indent','operator_cons',3,'p_operator_cons','parser.py',409),
  ('operator_infix -> infix_type_decl precedence operators NEWLINE','operator_infix',4,'p_operator_infix','parser.py',418),
  ('operators -> operators_begin operator_end','operators',2,'p_operators','parser.py',427),
  ('operators -> operator_end','operators',1,'p_operators_one','parser.py',434),
  ('operators_begin -> operators_begin operator_one','operators_begin',2,'p_operators_begin','parser.py',441),
  ('operators_begin -> operator_one','operators_begin',1,'p_operators_begin_one','parser.py',449),
  ('operator_one -> OPERATOR COMMA','operator_one',2,'p_operator_one','parser.py',457),
  ('operator_end -> OPERATOR','operator_end',1,'p_operator_end','parser.py',465),
  ('infix_type_decl -> INFIX','infix_type_decl',1,'p_infix_type_decl','parser.py',472),
  ('infix_type_decl -> INFIXR','infix_type_decl',1,'p_infix_type_decl','parser.py',473),
  ('infix_type_decl -> INFIXL','infix_type_decl',1,'p_infix_type_decl','parser.py',474),
  ('precedence -> INTNUMBER_DEC','precedence',1,'p_precedence','parser.py',482),
  ('type_def -> DATA type_name EQUALS constructor_list','type_def',4,'p_type_def','parser.py',490),
  ('constructor_list -> constructors','constructor_list',1,'p_constructor_list','parser.py',498),
  ('constructors -> constructors_begin constructor_end','constructors',2,'p_constructors','parser.py',506),
  ('constructors -> constructor_end','constructors',1,'p_constructors_one','parser.py',518),
  ('constructors_begin -> constructors_begin constructor','constructors_begin',2,'p_constructors_begin','parser.py',526),
  ('constructors_begin -> constructor','constructors_begin',1,'p_constructors_begin_one','parser.py',537),
  ('constructor_end -> constructor_one','constructor_end',1,'p_constructor_end','parser.py',548),
  ('constructor_one -> constructor_name constructor_param_list','constructor_one',2,'p_constructor_one','parser.py',556),
  ('constructor -> constructor_name constructor_param_list QUESTIONMARK','constructor',3,'p_constructor','parser.py',563),
  ('constructor_name -> ID','constructor_name',1,'p_constructor_name','parser.py',571),
  ('constructor_param_list -> empty','constructor_param_list',1,'p_constructor_param_list_empty','parser.py',579),
  ('constructor_param_list -> LPAREN constructor_params RPAREN','constructor_param_list',3,'p_constructor_param_list','parser.py',587),
  ('constructor_params -> constructor_params_begin constructor_param_end','constructor_params',2,'p_constructor_params','parser.py',595),
  ('constructor_params_begin -> constructor_params_begin constructor_param_one','constructor_params_begin',2,'p_constructor_params_begin','parser.py',603),
  ('constructor_params_begin -> constructor_param_one','constructor_params_begin',1,'p_constructor_params_begin_one','parser.py',611),
  ('constructor_param_end -> constructor_param','constructor_param_end',1,'p_constructor_param_end','parser.py',619),
  ('constructor_param_end -> empty','constructor_param_end',1,'p_constructor_param_end_empty','parser.py',627),
  ('constructor_param_one -> constructor_param COMMA','constructor_param_one',2,'p_constructor_param_one','parser.py',635),
  ('constructor_param -> type_name identifier','constructor_param',2,'p_constructor_param','parser.py',643),
  ('type_rename -> TYPE type_name EQUALS type_name','type_rename',4,'p_type_rename','parser.py',651),
  ('import_decl -> IMPORT identifier keyword_as keyword_except argument_list','import_decl',5,'p_import_decl','parser.py',659),
  ('keyword_as -> AS identifier','keyword_as',2,'p_keyword_as','parser.py',667),
  ('keyword_as -> empty','keyword_as',1,'p_keyword_as_empty','parser.py',675),
  ('keyword_except -> EXCEPT','keyword_except',1,'p_keyword_except','parser.py',683),
  ('keyword_except -> empty','keyword_except',1,'p_keyword_except_empty','parser.py',691),
  ('register_decl -> REGISTER LBRACKET identifier RBRACKET identifier keyword_as keyword_except argument_list','register_decl',8,'p_register_decl','parser.py',700),
  ('gen_structure -> gen_if_structure','gen_structure',1,'p_gen_structure','parser.py',709),
  ('gen_structure -> gen_case_structure','gen_structure',1,'p_gen_structure','parser.py',710),
  ('gen_structure -> gen_for_structure','gen_structure',1,'p_gen_structure','parser.py',711),
  ('gen_if_structure -> GIF expression COLON gsuite_indent gelifs gels','gen_if_structure',6,'p_gen_if_structure','parser.py',720),
  ('gelifs -> gelifs gelif_one','gelifs',2,'p_gelifs','parser.py',728),
  ('gelifs -> gelif_one','gelifs',1,'p_gelifs_one','parser.py',736),
  ('gelifs -> empty','gelifs',1,'p_gelifs_empty','parser.py',744),
  ('gelif_one -> GELIF expression COLON gsuite_indent','gelif_one',4,'p_gelif_one','parser.py',753),
  ('gels -> GELSE COLON gsuite_indent','gels',3,'p_gels','parser.py',762),
  ('gels -> empty','gels',1,'p_gels_empty','parser.py',770),
  ('gen_case_structure -> GCASE expression COLON case_list_indent','gen_case_structure',4,'p_gen_case_structure','parser.py',778),
  ('gen_for_structure -> GFOR identifier IN expression COLON gsuite_indent','gen_for_structure',6,'p_gen_for_structure','parser.py',786),
  ('gsuite_indent -> gsuite','gsuite_indent',1,'p_suite_indent_gen','parser.py',795),
  ('gsuite_indent -> NEWLINE INDENT gsuite DEDENT','gsuite_indent',4,'p_suite_indent_gen','parser.py',796),
  ('gsuite -> case_list','gsuite',1,'p_suite_gen','parser.py',808),
  ('gsuite -> gen_structure','gsuite',1,'p_suite_gen','parser.py',809),
  ('gsuite -> gexpression_stmt','gsuite',1,'p_suite_gen','parser.py',810),
  ('gexpression_stmt -> gexpression NEWLINE','gexpression_stmt',2,'p_expression_stmt_gen','parser.py',820),
  ('gexpression -> unary_operation','gexpression',1,'p_expression_gen','parser.py',828),
  ('gexpression -> binary_operation','gexpression',1,'p_expression_gen','parser.py',829),
  ('gexpression -> LPAREN expression RPAREN','gexpression',3,'p_expression_gen','parser.py',830),
  ('gexpression -> partial_selection','gexpression',1,'p_expression_gen','parser.py',831),
  ('gexpression -> tensor_list','gexpression',1,'p_expression_gen','parser.py',832),
  ('gexpression -> function_call','gexpression',1,'p_expression_gen','parser.py',833),
  ('gexpression -> pointer','gexpression',1,'p_expression_gen','parser.py',834),
  ('gexpression -> identifier','gexpression',1,'p_expression_gen','parser.py',835),
  ('gexpression -> const_expression','gexpression',1,'p_expression_gen','parser.py',836),
  ('gexpression -> OPERATOR','gexpression',1,'p_expression_gen','parser.py',837),
  ('pointer -> identifier tensor_list','pointer',2,'p_pointer','parser.py',849),
  ('context_def -> CONTEXT identifier inherit COLON declarations_indent','context_def',5,'p_context_def','parser.py',857),
  ('container_def -> CONTAINER identifier inherit parameterdef_list bus_list COLON declarations_indent','container_def',7,'p_container_def','parser.py',867),
  ('inherit -> LBRACE argument_end RBRACE','inherit',3,'p_inherit','parser.py',875),
  ('inherit -> LBRACE RBRACE','inherit',2,'p_inherit_brace','parser.py',883),
  ('inherit -> empty','inherit',1,'p_inherit_empty','parser.py',891),
  ('parameterdef_list -> LBRACKET parameterdefs RBRACKET','parameterdef_list',3,'p_parameterdef_list','parser.py',899),
  ('parameterdef_list -> LBRACKET RBRACKET','parameterdef_list',2,'p_parameterdef_list_bracket','parser.py',907),
  ('parameterdef_list -> empty','parameterdef_list',1,'p_parameterdef_list_empty','parser.py',915),
  ('parameterdefs -> parameterdefs_begin parameterdef_end','parameterdefs',2,'p_parameterdefs','parser.py',923),
  ('parameterdefs -> parameterdef_end','parameterdefs',1,'p_parameterdefs_one','parser.py',940),
  ('parameterdefs_begin -> parameterdefs_begin parameterdef','parameterdefs_begin',2,'p_parameterdefs_begin','parser.py',948),
  ('parameterdefs_begin -> parameterdef','parameterdefs_begin',1,'p_parameterdefs_begin_one','parser.py',959),
  ('parameterdef_end -> parameterdef_one','parameterdef_end',1,'p_parameterdef_end','parser.py',967),
  ('parameterdef_end -> empty','parameterdef_end',1,'p_parameterdef_end_empty','parser.py',975),
  ('parameterdef -> parameterdef_one COMMA','parameterdef',2,'p_parameterdef','parser.py',983),
  ('parameterdef_one -> type_name parameters','parameterdef_one',2,'p_parameterdef_one','parser.py',991),
  ('bus_list -> LPAREN buses RPAREN','bus_list',3,'p_bus_list','parser.py',999),
  ('bus_list -> LPAREN RPAREN','bus_list',2,'p_bus_list_paren','parser.py',1007),
  ('bus_list -> empty','bus_list',1,'p_bus_list_empty','parser.py',1015),
  ('buses -> buses_begin bus_end','buses',2,'p_buses','parser.py',1023),
  ('buses -> bus_end','buses',1,'p_buses_one','parser.py',1040),
  ('buses_begin -> buses_begin bus','buses_begin',2,'p_buses_begin','parser.py',1048),
  ('buses_begin -> bus','buses_begin',1,'p_buses_begin_one','parser.py',1057),
  ('bus_end -> bus_one','bus_end',1,'p_bus_end','parser.py',1065),
  ('bus_end -> empty','bus_end',1,'p_bus_end_empty','parser.py',1073),
  ('bus -> bus_one SEMICOLON','bus',2,'p_bus','parser.py',1081),
  ('bus_one -> bus_direction interface_name parameter_list arguments','bus_one',4,'p_bus_one_bus','parser.py',1089),
  ('bus_one -> port_direction typechain_one parameter_list arguments','bus_one',4,'p_bus_one_port','parser.py',1097),
  ('interface_name -> ID','interface_name',1,'p_interface_name','parser.py',1105),
  ('port_direction -> INPUT','port_direction',1,'p_port_direction','parser.py',1113),
  ('port_direction -> IN','port_direction',1,'p_port_direction','parser.py',1114),
  ('port_direction -> OUTPUT','port_direction',1,'p_port_direction','parser.py',1115),
  ('port_direction -> OUT','port_direction',1,'p_port_direction','parser.py',1116),
  ('port_direction -> INOUT','port_direction',1,'p_port_direction','parser.py',1117),
  ('declarations_indent -> declarations','declarations_indent',1,'p_declarations_indent','parser.py',1125),
  ('declarations_indent -> NEWLINE INDENT declarations DEDENT','declarations_indent',4,'p_declarations_indent','parser.py',1126),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','parser.py',1137),
  ('declarations -> declaration','declarations',1,'p_declarations_one','parser.py',1145),
  ('declaration -> variable_def','declaration',1,'p_declaration','parser.py',1154),
  ('declaration -> anonymous_function_def','declaration',1,'p_declaration','parser.py',1155),
  ('declaration -> instance_def','declaration',1,'p_declaration','parser.py',1156),
  ('structure -> if_structure','structure',1,'p_structure','parser.py',1165),
  ('structure -> case_structure','structure',1,'p_structure','parser.py',1166),
  ('structure -> for_structure','structure',1,'p_structure','parser.py',1167),
  ('variable_def -> keyword_variable types parameter_list pointer initial_value structure_maybe','variable_def',6,'p_variable_def','parser.py',1175),
  ('keyword_variable -> VARIABLE','keyword_variable',1,'p_keyword_variable','parser.py',1183),
  ('keyword_variable -> VAR','keyword_variable',1,'p_keyword_variable','parser.py',1184),
  ('structure_maybe -> COLON suite_indent','structure_maybe',2,'p_structure_maybe','parser.py',1192),
  ('structure_maybe -> empty','structure_maybe',1,'p_structure_maybe_empty','parser.py',1200),
  ('anonymous_function_def -> identifier EQUALS suite_indent','anonymous_function_def',3,'p_anonymous_function_def','parser.py',1209),
  ('instance_def -> keyword_instance identifier identifier parameter_list instance_port_list','instance_def',5,'p_instance_def','parser.py',1217),
  ('keyword_instance -> INSTANCE','keyword_instance',1,'p_keyword_instance','parser.py',1225),
  ('keyword_instance -> INS','keyword_instance',1,'p_keyword_instance','parser.py',1226),
  ('instance_port_list -> LPAREN instance_ports RPAREN','instance_port_list',3,'p_instance_port_list','parser.py',1234),
  ('instance_port_list -> empty','instance_port_list',1,'p_instance_port_list_empty','parser.py',1242),
  ('instance_ports -> instance_ports_begin instance_port_end','instance_ports',2,'p_instance_ports','parser.py',1250),
  ('instance_ports -> instance_port_end','instance_ports',1,'p_instance_ports_one','parser.py',1261),
  ('instance_ports_begin -> instance_ports_begin instance_port','instance_ports_begin',2,'p_instance_ports_begin','parser.py',1272),
  ('instance_ports_begin -> instance_port','instance_ports_begin',1,'p_instance_ports_begin_one','parser.py',1280),
  ('instance_port_end -> instance_port_one','instance_port_end',1,'p_instance_port_end','parser.py',1288),
  ('instance_port_end -> empty','instance_port_end',1,'p_instance_port_end_empty','parser.py',1296),
  ('instance_port -> instance_port_one COMMA','instance_port',2,'p_instance_port','parser.py',1304),
  ('instance_port_one -> instance_name','instance_port_one',1,'p_instance_port_one','parser.py',1312),
  ('instance_port_one -> input_instance_port','instance_port_one',1,'p_instance_port_one','parser.py',1313),
  ('instance_port_one -> output_instance_port','instance_port_one',1,'p_instance_port_one','parser.py',1314),
  ('instance_port_one -> inout_instance_port','instance_port_one',1,'p_instance_port_one','parser.py',1315),
  ('instance_name -> expression','instance_name',1,'p_instance_name','parser.py',1323),
  ('input_instance_port -> partial_selection LARROW expression','input_instance_port',3,'p_input_instance_port','parser.py',1331),
  ('output_instance_port -> partial_selection RARROW partial_selection','output_instance_port',3,'p_output_instance_port','parser.py',1339),
  ('inout_instance_port -> partial_selection BARROW partial_selection','inout_instance_port',3,'p_inout_instance_port','parser.py',1347),
  ('partial_selection -> identifier tensor_select_list','partial_selection',2,'p_partial_selection','parser.py',1356),
  ('tensor_select_list -> LBRACKET expression COLON expression RBRACKET','tensor_select_list',5,'p_tensor_select_list','parser.py',1365),
  ('tensor_select_list -> tensor_list','tensor_select_list',1,'p_tensor_select_list_one','parser.py',1373),
  ('interface_def -> INTERFACE identifier bus_direction parameterdef_list COLON interface_bus_list','interface_def',6,'p_interface_def','parser.py',1382),
  ('bus_direction -> MASTER','bus_direction',1,'p_bus_direction','parser.py',1390),
  ('bus_direction -> SLAVE','bus_direction',1,'p_bus_direction','parser.py',1391),
  ('interface_bus_list -> interface_buses interface_bus','interface_bus_list',2,'p_interface_bus_list','parser.py',1399),
  ('interface_buses -> interface_bus','interface_buses',1,'p_interface_buses','parser.py',1407),
  ('interface_bus -> bus_one','interface_bus',1,'p_interface_bus','parser.py',1415),
  ('parameter_list -> LBRACKET parameters RBRACKET','parameter_list',3,'p_parameter_list','parser.py',1424),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list_empty','parser.py',1432),
  ('parameters -> parameters_begin parameter_end','parameters',2,'p_parameters','parser.py',1440),
  ('parameters -> parameter_end','parameters',1,'p_parameters_one','parser.py',1451),
  ('parameters_begin -> parameters_begin parameter','parameters_begin',2,'p_parameters_begin','parser.py',1459),
  ('parameters_begin -> parameter','parameters_begin',1,'p_parameters_begin_one','parser.py',1467),
  ('parameter_end -> parameter_one','parameter_end',1,'p_parameter_end','parser.py',1475),
  ('parameter_end -> empty','parameter_end',1,'p_parameter_end_empty','parser.py',1483),
  ('parameter -> parameter_one COMMA','parameter',2,'p_parameter','parser.py',1491),
  ('parameter_one -> identifier tensor_list LARROW expression','parameter_one',4,'p_parameter_one','parser.py',1499),
  ('parameter_one -> identifier tensor_list','parameter_one',2,'p_parameter_one_no_expr','parser.py',1507),
  ('parameter_one -> expression','parameter_one',1,'p_parameter_number','parser.py',1515),
  ('tensor_list -> LBRACKET expressions RBRACKET','tensor_list',3,'p_tensor_list','parser.py',1523),
  ('tensor_list -> empty','tensor_list',1,'p_tensor_list_empty','parser.py',1531),
  ('if_structure -> IF expression COLON suite_indent elifs els','if_structure',6,'p_if_structure','parser.py',1539),
  ('elifs -> elifs elif_one','elifs',2,'p_elifs','parser.py',1547),
  ('elifs -> elif_one','elifs',1,'p_elifs_one','parser.py',1555),
  ('elifs -> empty','elifs',1,'p_elifs_empty','parser.py',1563),
  ('elif_one -> ELIF expression COLON suite_indent','elif_one',4,'p_elif_one','parser.py',1572),
  ('els -> ELSE COLON suite_indent','els',3,'p_els','parser.py',1581),
  ('els -> empty','els',1,'p_els_empty','parser.py',1589),
  ('case_structure -> CASE expression COLON case_list_indent','case_structure',4,'p_case_structure','parser.py',1597),
  ('for_structure -> FOR identifier IN expression COLON suite_indent','for_structure',6,'p_for_structure','parser.py',1605),
  ('suite_indent -> suite','suite_indent',1,'p_suite_indent','parser.py',1614),
  ('suite_indent -> NEWLINE INDENT suite DEDENT','suite_indent',4,'p_suite_indent','parser.py',1615),
  ('suite -> structure','suite',1,'p_suite','parser.py',1627),
  ('suite -> expression_stmt','suite',1,'p_suite','parser.py',1628),
  ('case_list_indent -> case_list','case_list_indent',1,'p_case_list_indent','parser.py',1636),
  ('case_list_indent -> NEWLINE INDENT case_list DEDENT','case_list_indent',4,'p_case_list_indent','parser.py',1637),
  ('case_list -> case_list case_entry','case_list',2,'p_case_list','parser.py',1648),
  ('case_list -> case_entry','case_list',1,'p_case_list','parser.py',1649),
  ('case_entry -> expression COLON suite_indent','case_entry',3,'p_case_entry','parser.py',1663),
  ('case_entry -> gen_structure','case_entry',1,'p_case_entry_gen','parser.py',1671),
  ('expression_stmt -> expression NEWLINE','expression_stmt',2,'p_expression_stmt','parser.py',1690),
  ('expression_stmt -> expression','expression_stmt',1,'p_expression_stmt','parser.py',1691),
  ('expressions -> expressions_begin expression_end','expressions',2,'p_expressions','parser.py',1699),
  ('expressions -> expression_end','expressions',1,'p_expressions_one','parser.py',1707),
  ('expressions_begin -> expressions_begin expression_comma','expressions_begin',2,'p_expressions_begin','parser.py',1715),
  ('expressions_begin -> expression_comma','expressions_begin',1,'p_expressions_begin_one','parser.py',1723),
  ('expression_end -> expression','expression_end',1,'p_expression_end','parser.py',1731),
  ('expression_comma -> expression COMMA','expression_comma',2,'p_expression_comma','parser.py',1739),
  ('initial_value -> LARROW expression','initial_value',2,'p_initial_value','parser.py',1747),
  ('expression -> unary_operation','expression',1,'p_expression','parser.py',1756),
  ('expression -> binary_operation','expression',1,'p_expression','parser.py',1757),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',1758),
  ('expression -> partial_selection','expression',1,'p_expression','parser.py',1759),
  ('expression -> tensor_list','expression',1,'p_expression','parser.py',1760),
  ('expression -> function_call','expression',1,'p_expression','parser.py',1761),
  ('expression -> pointer','expression',1,'p_expression','parser.py',1762),
  ('expression -> identifier','expression',1,'p_expression','parser.py',1763),
  ('expression -> const_expression','expression',1,'p_expression','parser.py',1764),
  ('expression -> operator_decl','expression',1,'p_expression','parser.py',1765),
  ('operator_decl -> OPERATOR','operator_decl',1,'p_operator_decl','parser.py',1777),
  ('unary_operation -> OPERATOR expression','unary_operation',2,'p_unary_operation','parser.py',1785),
  ('binary_operation -> expression OPERATOR expression','binary_operation',3,'p_binary_operation','parser.py',1793),
  ('function_call -> identifier instance_port_list','function_call',2,'p_function_call','parser.py',1802),
  ('const_expression -> int_number','const_expression',1,'p_const_expression','parser.py',1811),
  ('const_expression -> float_number','const_expression',1,'p_const_expression','parser.py',1812),
  ('const_expression -> string_literal','const_expression',1,'p_const_expression','parser.py',1813),
  ('int_number -> INTNUMBER_DEC','int_number',1,'p_int_number','parser.py',1822),
  ('int_number -> SIGNED_INTNUMBER_DEC','int_number',1,'p_int_number','parser.py',1823),
  ('int_number -> INTNUMBER_BIN','int_number',1,'p_int_number','parser.py',1824),
  ('int_number -> SIGNED_INTNUMBER_BIN','int_number',1,'p_int_number','parser.py',1825),
  ('int_number -> INTNUMBER_OCT','int_number',1,'p_int_number','parser.py',1826),
  ('int_number -> SIGNED_INTNUMBER_OCT','int_number',1,'p_int_number','parser.py',1827),
  ('int_number -> INTNUMBER_HEX','int_number',1,'p_int_number','parser.py',1828),
  ('int_number -> SIGNED_INTNUMBER_HEX','int_number',1,'p_int_number','parser.py',1829),
  ('string_literal -> STRING_LITERAL','string_literal',1,'p_string_literal','parser.py',1838),
  ('float_number -> FLOATNUMBER','float_number',1,'p_float_number','parser.py',1847),
  ('identifier -> scopes ID','identifier',2,'p_identifier','parser.py',1856),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',1857),
  ('scopes -> scopes scope','scopes',2,'p_scopes','parser.py',1868),
  ('scopes -> scope','scopes',1,'p_scopes','parser.py',1869),
  ('scope -> ID DOT','scope',2,'p_scope','parser.py',1879),
  ('scope -> pointer DOT','scope',2,'p_scope_pointer','parser.py',1887),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1895),
]

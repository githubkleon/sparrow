
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'file_input_endIF ELSE ELIF CASE FOR GIF GELSE GELIF GCASE GFOR DATA TYPE CONTAINER INTERFACE INPUT OUTPUT IN OUT INOUT MASTER SLAVE VARIABLE VAR INSTANCE INS INFIX INFIXR INFIXL IMPORT AS EXCEPT REGISTER CONTEXT OPERATOR FLOATNUMBER STRING_LITERAL INTNUMBER_DEC SIGNED_INTNUMBER_DEC INTNUMBER_HEX SIGNED_INTNUMBER_HEX INTNUMBER_OCT SIGNED_INTNUMBER_OCT INTNUMBER_BIN SIGNED_INTNUMBER_BIN COLON SEMICOLON DUALCOLON INDENT DEDENT WS NEWLINE ENDMARKER ID EQUALS QUESTIONMARK LARROW RARROW BARROW LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA DOT\n    file_input_end : file_input ENDMARKER\n    \n    file_input : package \n               | NEWLINE\n               | package NEWLINE\n    \n    package : module\n    \n    module : statements\n    \n    statements : statements statement_stmt\n    \n    statements : statement_stmt\n    \n    statement_stmt : statement NEWLINE\n                   | statement\n    \n    statement : function_def\n              | function_cons\n              | operator_def\n              | operator_cons\n              | operator_infix\n              | container_def\n              | interface_def\n              | type_def\n              | type_rename\n              | gen_structure\n              | import_decl\n              | register_decl\n              | context_def\n    \n    function_def : identifier argument_list EQUALS suite_indent\n    \n    argument_list : LPAREN arguments RPAREN\n    \n    argument_list : argument_name\n    \n    argument_list : empty\n    \n    arguments : arguments_begin argument_end\n    \n    arguments : argument_end\n    \n    arguments_begin : arguments_begin argument\n    \n    arguments_begin : argument\n    \n    argument_end : argument_name\n    \n    argument_end : empty\n    \n    argument : argument_name COMMA\n    \n    argument_name : ID\n    \n    operator_def : OPERATOR argument_list EQUALS suite_indent\n    \n    operator_def : argument_end OPERATOR argument_end EQUALS statement\n    \n    \n    operator_def : OPERATOR argument_end EQUALS statement\n    \n    \n    function_cons : identifier DUALCOLON cons_indent\n    \n    input_typechain_list : LPAREN typechains RPAREN RARROW\n    \n    input_typechain_list : typechain_one RARROW\n    \n    input_typechain_list : empty\n    \n    output_typechain_list : LPAREN typechain_one RPAREN\n    \n    output_typechain_list : typechain_one\n    \n    typechains : typechains_begin typechain_end\n    \n    typechains : typechain_end\n    \n    typechains_begin : typechains_begin typechain\n    \n    typechains_begin : typechain\n    \n    typechain_end : typechain_one\n    \n    typechain_end : empty\n    \n    typechain : typechain_one COMMA\n    \n    typechain_one : types\n    \n    types : types_begin type_end\n    \n    types : type_end\n    \n    types_begin : types_begin type\n    \n    types_begin : type\n    \n    type_end : type_name\n    \n    type : type_name RARROW\n    \n    type_name : pointer\n    \n    cons_indent : input_typechain_list output_typechain_list NEWLINE\n                | NEWLINE INDENT input_typechain_list output_typechain_list NEWLINE DEDENT \n    \n    \n    operator_cons : operators DUALCOLON cons_indent\n    \n    \n    operator_infix : infix_type_decl precedence operators NEWLINE\n    \n    \n    operators : operators_begin operator_end\n    \n    operators : operator_end\n    \n    operators_begin : operators_begin operator_one\n    \n    operators_begin : operator_one\n    \n    operator_one : OPERATOR COMMA\n    \n    operator_end : OPERATOR\n    \n    infix_type_decl : INFIX\n                    | INFIXR\n                    | INFIXL\n    \n    precedence : INTNUMBER_DEC\n    \n    type_def : DATA type_name EQUALS constructor_list\n    \n    constructor_list : constructors\n    \n    constructors : constructors_begin constructor_end\n    \n    constructors : constructor_end\n    \n    constructors_begin : constructors_begin constructor\n    \n    constructors_begin : constructor\n    \n    constructor_end : constructor_one\n    \n    constructor_one : constructor_name constructor_param_list\n    \n    constructor : constructor_name constructor_param_list QUESTIONMARK\n    \n    constructor_name : ID\n    \n    constructor_param_list : empty\n    \n    constructor_param_list : LPAREN constructor_params RPAREN\n    \n    constructor_params : constructor_params_begin constructor_param_end\n    \n    constructor_params_begin : constructor_params_begin constructor_param_one\n    \n    constructor_params_begin : constructor_param_one\n    \n    constructor_param_end : constructor_param\n    \n    constructor_param_end : empty\n    \n    constructor_param_one : constructor_param COMMA\n    \n    constructor_param : type_name identifier\n    \n    type_rename : TYPE type_name EQUALS type_name\n    \n    import_decl : IMPORT identifier keyword_as keyword_except argument_list\n    \n    keyword_as : AS identifier \n    \n    keyword_as : empty\n    \n    keyword_except : EXCEPT \n    \n    keyword_except : empty\n    \n    \n    register_decl : REGISTER LBRACKET identifier RBRACKET identifier keyword_as keyword_except argument_list\n    \n    \n    gen_structure : gen_if_structure\n        | gen_case_structure\n        | gen_for_structure\n    \n    \n    gen_if_structure : GIF expression COLON gsuite_indent gelifs gels\n    \n    gelifs : gelifs gelif_one\n    \n    gelifs : gelif_one\n    \n    gelifs : empty\n    \n    \n    gelif_one : GELIF expression COLON gsuite_indent\n    \n    \n    gels : GELSE COLON gsuite_indent\n    \n    gels : empty\n    \n    gen_case_structure : GCASE expression COLON case_list_indent\n    \n    gen_for_structure : GFOR identifier IN expression COLON gsuite_indent\n    \n    \n    gsuite_indent : gsuite\n                 | NEWLINE INDENT gsuite DEDENT\n\n    \n    gsuite : case_list\n          | gen_structure\n          | gexpression_stmt\n    \n    gexpression_stmt : gexpression NEWLINE\n    \n    gexpression : unary_operation\n               | binary_operation\n               | LPAREN expression RPAREN\n               | partial_selection\n               | tensor_list\n               | function_call\n               | pointer\n               | identifier\n               | const_expression\n               | OPERATOR\n    \n    pointer : identifier tensor_list\n    \n    \n    context_def : CONTEXT identifier inherit COLON declarations_indent\n    \n    container_def : CONTAINER identifier inherit parameterdef_list bus_list COLON declarations_indent\n    \n    inherit : LBRACE argument_end RBRACE\n    \n    inherit : LBRACE RBRACE\n    \n    inherit : empty\n    \n    parameterdef_list : LBRACKET parameterdefs RBRACKET\n    \n    parameterdef_list : LBRACKET RBRACKET\n    \n    parameterdef_list : empty\n    \n    parameterdefs : parameterdefs_begin parameterdef_end\n    \n    parameterdefs : parameterdef_end\n    \n    parameterdefs_begin : parameterdefs_begin parameterdef\n    \n    parameterdefs_begin : parameterdef\n    \n    parameterdef_end : parameterdef_one\n    \n    parameterdef_end : empty\n    \n    parameterdef : parameterdef_one COMMA\n    \n    parameterdef_one : type_name parameters\n    \n    bus_list : LPAREN buses RPAREN\n    \n    bus_list : LPAREN RPAREN\n    \n    bus_list : empty\n    \n    buses : buses_begin bus_end\n    \n    buses : bus_end\n    \n    buses_begin : buses_begin bus\n    \n    buses_begin : bus\n    \n    bus_end : bus_one\n    \n    bus_end : empty\n    \n    bus : bus_one SEMICOLON\n    \n    bus_one : bus_direction interface_name parameter_list arguments\n    \n    bus_one : port_direction typechain_one parameter_list arguments\n    \n    interface_name : ID\n    \n    port_direction : INPUT \n                   | IN \n                   | OUTPUT \n                   | OUT \n                   | INOUT\n    \n    declarations_indent : declarations\n        | NEWLINE INDENT declarations DEDENT\n    \n    declarations : declarations declaration\n    \n    declarations : declaration\n    \n    \n    declaration : variable_def\n                | anonymous_function_def\n                | instance_def\n    \n    \n    structure : if_structure\n        | case_structure    \n        | for_structure\n    \n    variable_def : keyword_variable types parameter_list pointer initial_value structure_maybe\n    \n    keyword_variable : VARIABLE \n                     | VAR\n    \n    structure_maybe : COLON suite_indent\n    \n    structure_maybe : empty\n    \n    \n    anonymous_function_def : identifier EQUALS suite_indent\n    \n    \n    instance_def : keyword_instance identifier identifier parameter_list instance_port_list\n    \n    keyword_instance : INSTANCE \n                     | INS\n    \n    instance_port_list : LPAREN instance_ports RPAREN\n    \n    instance_port_list : empty\n    \n    instance_ports : instance_ports_begin instance_port_end\n    \n    instance_ports : instance_port_end\n    \n    instance_ports_begin : instance_ports_begin instance_port\n    \n    instance_ports_begin : instance_port\n    \n    instance_port_end : instance_port_one\n    \n    instance_port_end : empty\n    \n    instance_port : instance_port_one COMMA\n    \n    instance_port_one : instance_name\n        | input_instance_port\n        | output_instance_port\n        | inout_instance_port\n    \n    instance_name : expression\n    \n    input_instance_port : partial_selection LARROW expression\n    \n    output_instance_port : partial_selection RARROW partial_selection\n    \n    inout_instance_port : partial_selection BARROW partial_selection\n    \n    \n    partial_selection : identifier tensor_select_list\n    \n    \n    tensor_select_list : LBRACKET expression COLON expression RBRACKET\n    \n    tensor_select_list : tensor_list\n    \n    \n    interface_def : INTERFACE bus_direction identifier inherit parameterdef_list COLON interface_bus_list_indent\n    \n    bus_direction : MASTER \n                  | SLAVE\n    \n    interface_bus_list_indent : interface_bus_list\n                              | NEWLINE INDENT interface_bus_list DEDENT\n    \n    interface_bus_list : interface_buses interface_bus\n    \n    interface_bus_list : interface_bus\n    \n    interface_buses : interface_bus\n    \n    interface_bus : bus_one NEWLINE\n                  | bus_one\n    \n    parameter_list : LBRACKET parameters RBRACKET\n    \n    parameter_list : empty\n    \n    parameters : parameters_begin parameter_end\n    \n    parameters : parameter_end\n    \n    parameters_begin : parameters_begin parameter\n    \n    parameters_begin : parameter\n    \n    parameter_end : parameter_one\n    \n    parameter_end : empty\n    \n    parameter : parameter_one COMMA\n    \n    parameter_one : identifier tensor_list LARROW expression\n    \n    parameter_one : identifier tensor_list\n    \n    parameter_one : expression\n    \n    tensor_list : LBRACKET expressions RBRACKET\n    \n    tensor_list : empty\n    \n    if_structure : IF expression COLON suite_indent elifs els\n    \n    elifs : elifs elif_one\n    \n    elifs : elif_one\n    \n    elifs : empty\n    \n    \n    elif_one : ELIF expression COLON suite_indent\n    \n    \n    els : ELSE COLON suite_indent\n    \n    els : empty\n    \n    case_structure : CASE expression COLON case_list_indent\n    \n    for_structure : FOR identifier IN expression COLON suite_indent\n    \n    \n    suite_indent : suite\n                 | NEWLINE INDENT suite DEDENT\n    \n    \n    suite : structure\n          | expression_stmt\n    \n    case_list_indent : case_list\n                     | NEWLINE INDENT case_list DEDENT    \n    \n    case_list : case_list case_entry\n              | case_entry\n    \n    case_entry : expression COLON suite_indent\n    \n    case_entry : gen_structure\n    \n    expression_stmt : expression NEWLINE\n                    | expression\n    \n    expressions : expressions_begin expression_end\n    \n    expressions : expression_end\n    \n    expressions_begin : expressions_begin expression_comma\n    \n    expressions_begin : expression_comma\n    \n    expression_end : expression\n    \n    expression_comma : expression COMMA\n    \n    initial_value : LARROW expression\n    \n    \n    expression : unary_operation\n               | binary_operation\n               | LPAREN expression RPAREN\n               | partial_selection\n               | tensor_list\n               | function_call\n               | pointer\n               | identifier\n               | const_expression\n               | operator_decl\n    \n    operator_decl : OPERATOR\n    \n    unary_operation : OPERATOR expression\n    \n    binary_operation : expression OPERATOR expression\n    \n    \n    function_call : identifier instance_port_list\n    \n    \n    const_expression : int_number\n        | float_number\n        | string_literal\n    \n    \n    int_number : INTNUMBER_DEC\n        | SIGNED_INTNUMBER_DEC\n        | INTNUMBER_BIN\n        | SIGNED_INTNUMBER_BIN\n        | INTNUMBER_OCT\n        | SIGNED_INTNUMBER_OCT\n        | INTNUMBER_HEX\n        | SIGNED_INTNUMBER_HEX\n    \n    \n    string_literal : STRING_LITERAL\n    \n    \n    float_number : FLOATNUMBER\n    \n    \n    identifier : scopes ID\n               | ID\n    \n    scopes : scopes scope\n           | scope\n    \n    scope : ID DOT\n    \n    scope : pointer DOT\n    \n    empty : \n    '
    
_lr_action_items = {'NEWLINE':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,42,54,55,57,58,60,63,70,74,79,80,82,85,88,90,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,145,146,153,155,158,159,161,162,163,166,167,168,170,171,173,174,175,176,177,178,182,184,193,196,197,198,199,200,204,205,207,214,215,217,219,220,221,222,223,224,225,226,228,230,231,233,234,235,236,237,238,239,240,242,243,244,245,246,247,248,249,263,264,266,268,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,321,322,323,326,334,336,337,339,340,342,369,376,377,378,382,383,384,386,389,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,436,437,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[4,53,-5,-6,-8,55,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-65,-7,-9,123,-128,-26,-35,123,-282,-59,-287,-287,-281,-64,-69,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,172,-39,-52,-54,-57,-287,-29,-31,-32,172,-62,207,-287,-96,232,-287,-199,-267,-128,-183,-265,265,-24,-235,-237,-238,-170,-171,-172,269,273,-44,-53,-25,-28,-30,-34,-224,-36,-38,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,305,-287,-112,-114,-115,-116,-242,323,-125,-118,-119,-121,-122,-123,-124,-126,-127,-266,-256,-110,-239,-244,-287,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,172,-287,-105,-106,-287,-241,-117,-182,232,172,265,-43,401,305,418,-287,172,-165,-243,-103,-104,-109,-120,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,453,-85,-287,-178,-213,-287,232,232,-113,-200,-240,-287,-228,-229,172,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,172,172,-206,-173,172,-177,-253,-231,-230,-176,]),'OPERATOR':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,31,32,33,38,39,40,41,46,47,50,54,55,58,60,62,63,66,71,72,74,79,80,82,85,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,127,129,131,133,134,135,136,138,140,141,142,143,145,153,155,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,193,196,197,198,199,200,202,203,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,229,230,231,233,234,235,236,238,239,240,241,242,243,244,245,246,247,248,249,250,252,254,256,261,262,263,264,266,267,268,269,270,271,273,280,291,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,320,321,322,323,324,325,326,328,329,330,333,334,336,337,338,362,364,366,367,368,376,377,378,382,383,384,386,387,389,390,391,395,396,397,398,399,400,402,407,408,409,411,412,413,414,415,416,417,420,421,422,429,430,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,452,453,454,455,458,459,460,461,462,463,464,466,467,468,469,470,471,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,],[23,23,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,69,-100,-101,-102,-35,-32,-33,90,102,102,-67,-7,-9,-128,-26,102,-35,-68,90,-73,-282,-59,-287,-287,-281,-66,159,-254,-255,102,-257,-258,-259,-260,-261,-262,-263,102,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,159,102,-39,-52,-54,-57,-287,-29,-31,-32,102,-250,159,102,23,-62,-287,-96,247,102,159,-199,-267,-128,102,102,-183,159,102,102,-24,-235,-237,-238,-170,-171,-172,159,102,102,-53,-25,-28,-30,-34,-224,-249,-252,-36,-38,23,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,159,-287,-112,102,-115,-116,-242,-261,-254,-255,102,-257,-258,-259,-260,-262,102,159,-256,159,102,-187,-225,159,-257,-110,102,-244,159,102,-245,159,159,-60,-37,102,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,102,-287,-105,-106,102,247,-241,-117,159,102,-182,-186,-190,102,102,247,102,102,102,102,-217,-225,-261,159,-287,102,-165,-243,-103,-104,-109,159,-256,159,159,102,-111,-236,-287,-233,159,-130,-287,-157,-287,-216,-220,-128,102,-183,-202,-205,-208,-211,-85,-287,-178,102,-213,-287,247,247,-113,-200,-240,-287,-228,-229,102,102,-61,-287,-287,102,159,-207,-210,-99,-164,-287,102,-213,-108,-107,-226,-227,-232,159,-234,-155,-156,159,-287,102,-212,-179,-183,159,102,102,-206,-173,102,-177,159,-231,-230,-176,]),'CONTAINER':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,376,377,378,382,383,384,386,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[27,27,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,27,-62,-287,-96,-287,-199,-267,-128,-183,-265,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,27,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,-287,-287,-165,-243,-103,-104,-109,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'INTERFACE':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,376,377,378,382,383,384,386,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[28,28,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,28,-62,-287,-96,-287,-199,-267,-128,-183,-265,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,28,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,-287,-287,-165,-243,-103,-104,-109,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'DATA':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,376,377,378,382,383,384,386,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[29,29,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,29,-62,-287,-96,-287,-199,-267,-128,-183,-265,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,29,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,-287,-287,-165,-243,-103,-104,-109,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'TYPE':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,376,377,378,382,383,384,386,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[30,30,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,30,-62,-287,-96,-287,-199,-267,-128,-183,-265,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,30,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,-287,-287,-165,-243,-103,-104,-109,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'IMPORT':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,376,377,378,382,383,384,386,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[34,34,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,34,-62,-287,-96,-287,-199,-267,-128,-183,-265,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,34,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,-287,-287,-165,-243,-103,-104,-109,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'REGISTER':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,376,377,378,382,383,384,386,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[35,35,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,35,-62,-287,-96,-287,-199,-267,-128,-183,-265,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,35,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,-287,-287,-165,-243,-103,-104,-109,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'CONTEXT':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,376,377,378,382,383,384,386,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[36,36,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,36,-62,-287,-96,-287,-199,-267,-128,-183,-265,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,36,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,-287,-287,-165,-243,-103,-104,-109,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'ID':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,29,30,31,32,33,34,36,37,38,40,46,47,48,49,54,55,57,58,59,60,62,63,69,70,74,75,76,77,79,80,82,83,85,86,87,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,120,121,122,124,126,127,128,129,130,131,133,134,135,136,138,140,142,143,145,148,151,152,153,154,155,158,159,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,180,181,183,185,187,189,192,193,194,195,196,197,198,199,200,202,203,204,205,206,207,209,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,230,231,233,234,235,236,241,247,248,249,252,254,263,264,266,268,269,273,275,278,279,280,286,288,291,294,295,296,297,298,299,300,301,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,325,326,328,329,330,331,332,333,334,336,337,338,341,342,350,351,352,353,354,355,356,359,360,362,364,370,372,373,375,376,377,378,379,380,381,382,383,384,386,395,396,397,398,399,402,407,408,409,411,412,414,416,417,420,421,422,424,427,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,452,453,454,455,458,459,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[38,38,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,63,63,74,74,74,-100,-101,-102,74,74,85,-282,-33,74,74,74,-284,-7,-9,74,-128,63,-26,74,-35,63,74,-282,74,-203,-204,-59,-287,-287,74,-281,-283,-285,-254,-255,74,-257,-258,-259,-260,-261,-262,-263,74,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-286,74,-39,74,74,-42,-52,74,-54,-56,-57,63,-29,-31,-32,74,-250,74,38,-62,63,221,74,-287,74,-96,74,74,-199,-267,-128,74,74,-183,-265,74,74,-24,-235,-237,-238,-170,-171,-172,-246,74,74,74,74,74,74,-48,-41,-53,-55,-58,-25,-28,-30,-34,-224,-249,-252,-36,-38,38,-63,74,-74,-75,221,-77,-79,-80,-287,-83,-93,63,-97,-98,-95,74,74,-287,-112,74,-115,-116,-242,74,74,-266,-256,74,-187,-110,74,-244,74,-245,-60,74,-47,-51,-37,74,-140,74,-76,-78,-81,-84,74,-94,-27,-287,-129,74,-166,-167,-168,-169,74,74,-174,-175,-180,-181,74,-287,-105,-106,74,74,-241,-117,74,-182,-186,-190,74,74,74,74,74,74,74,74,-40,74,408,74,-158,-159,-160,-161,-162,-139,-143,74,-217,-82,74,-88,74,-287,74,-165,74,-287,74,-243,-103,-104,-109,74,-111,-236,-287,-233,-130,-287,-157,-287,-216,-220,74,-202,-205,-208,-211,-85,-87,-91,63,-178,74,74,74,-213,-287,74,74,-113,-200,-240,-287,-228,-229,74,74,-61,63,63,74,-207,-210,-99,-164,-287,74,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,74,-212,-179,-183,74,74,-206,-173,74,-177,-253,-231,-230,-176,]),'INFIX':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,376,377,378,382,383,384,386,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[43,43,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,43,-62,-287,-96,-287,-199,-267,-128,-183,-265,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,43,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,-287,-287,-165,-243,-103,-104,-109,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'INFIXR':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,376,377,378,382,383,384,386,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[44,44,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,44,-62,-287,-96,-287,-199,-267,-128,-183,-265,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,44,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,-287,-287,-165,-243,-103,-104,-109,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'INFIXL':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,376,377,378,382,383,384,386,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[45,45,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,45,-62,-287,-96,-287,-199,-267,-128,-183,-265,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,45,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,-287,-287,-165,-243,-103,-104,-109,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'GIF':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,158,159,161,162,163,166,167,168,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,321,322,323,326,333,334,336,337,376,377,378,382,383,384,386,395,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,436,437,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[46,46,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,46,-62,-287,-96,46,-287,-199,-267,-128,-183,-265,46,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,46,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,46,-115,-116,-242,-266,-256,-110,46,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,46,-241,-117,-182,46,46,-287,46,-287,-287,-165,-243,-103,-104,-109,46,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,46,46,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'GCASE':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,158,159,161,162,163,166,167,168,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,321,322,323,326,333,334,336,337,376,377,378,382,383,384,386,395,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,436,437,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[47,47,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,47,-62,-287,-96,47,-287,-199,-267,-128,-183,-265,47,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,47,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,47,-115,-116,-242,-266,-256,-110,47,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,47,-241,-117,-182,47,47,-287,47,-287,-287,-165,-243,-103,-104,-109,47,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,47,47,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'GFOR':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,143,145,153,155,158,159,161,162,163,166,167,168,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,206,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,321,322,323,326,333,334,336,337,376,377,378,382,383,384,386,395,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,436,437,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[48,48,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,48,-62,-287,-96,48,-287,-199,-267,-128,-183,-265,48,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,48,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,48,-115,-116,-242,-266,-256,-110,48,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,48,-241,-117,-182,48,48,-287,48,-287,-287,-165,-243,-103,-104,-109,48,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,48,48,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'$end':([1,52,],[0,-1,]),'ENDMARKER':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,31,32,33,40,53,54,55,58,60,63,74,79,80,82,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,121,127,129,131,133,134,135,136,142,145,153,155,159,161,162,163,166,167,170,171,173,174,175,176,177,178,193,196,197,198,199,200,204,205,207,214,215,217,219,220,221,222,223,224,225,226,230,231,233,234,235,236,248,249,263,264,266,269,273,280,294,296,297,299,300,301,303,304,306,307,308,309,316,317,318,319,322,323,326,336,376,377,378,382,383,384,386,396,397,398,399,402,407,408,409,416,417,420,421,422,429,430,434,435,438,439,440,441,442,443,445,446,447,448,452,453,454,455,458,460,461,462,463,464,466,468,469,470,473,474,475,476,477,479,480,481,482,483,484,485,486,487,488,],[52,-2,-3,-5,-6,-8,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-100,-101,-102,-33,-4,-7,-9,-128,-26,-35,-282,-59,-287,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-39,-52,-54,-57,-287,-29,-31,-32,-287,-62,-287,-96,-287,-199,-267,-128,-183,-265,-24,-235,-237,-238,-170,-171,-172,-246,-53,-25,-28,-30,-34,-224,-36,-38,-63,-74,-75,-77,-80,-287,-83,-93,-287,-97,-98,-95,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-60,-37,-76,-81,-84,-94,-27,-287,-129,-163,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,-287,-287,-165,-243,-103,-104,-109,-111,-236,-287,-233,-130,-287,-157,-287,-202,-205,-208,-211,-85,-287,-178,-213,-287,-113,-200,-240,-287,-228,-229,-287,-61,-287,-287,-207,-210,-99,-164,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,-287,-287,-212,-179,-183,-287,-287,-206,-173,-287,-177,-253,-231,-230,-176,]),'DUALCOLON':([22,23,25,38,42,85,88,90,],[57,-69,70,-282,-65,-281,-64,-69,]),'LPAREN':([22,23,31,32,33,38,46,47,57,58,62,70,73,74,79,80,82,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,122,126,138,140,142,147,149,153,155,158,159,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,185,192,200,202,203,208,210,212,220,221,223,224,225,226,230,231,233,234,235,236,238,241,247,248,249,252,254,263,264,266,268,269,275,285,291,292,301,316,317,318,319,320,321,322,323,325,326,328,329,330,333,334,336,337,338,341,357,362,364,367,376,377,382,383,384,386,395,396,397,398,399,411,412,414,429,433,435,436,437,438,439,440,441,442,443,444,445,449,458,459,460,461,462,463,464,466,468,474,475,479,480,483,486,487,],[59,59,-100,-101,-102,-282,94,94,124,-128,94,124,-287,-282,-59,-287,-287,-281,-254,-255,94,-257,-258,-259,-260,165,-262,-263,94,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,94,183,-42,94,-250,94,-287,-133,-287,-96,241,94,-199,-267,-128,94,94,-183,-265,94,94,-235,-237,-238,-170,-171,-172,-246,94,94,124,-41,-224,-249,-252,282,-136,-132,298,-83,59,-97,-98,-95,-287,-112,94,-115,-116,-242,165,94,94,-266,-256,94,-187,-110,94,-244,94,-245,183,-135,94,-131,-287,94,-287,-105,-106,94,241,-241,-117,94,-182,-186,-190,94,94,241,94,94,94,-40,-134,94,-217,165,-287,94,-243,-103,-104,-109,94,-111,-236,-287,-233,-216,-220,94,59,94,-287,241,241,-113,-200,-240,-287,-228,-229,94,94,94,165,94,-213,-108,-107,-226,-227,-232,-234,94,-212,94,94,94,-231,-230,]),'LBRACKET':([22,31,32,33,35,38,46,47,58,62,73,74,79,80,82,84,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,118,120,127,129,131,138,140,142,147,149,150,156,158,159,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,193,200,202,203,212,213,226,230,231,233,234,235,236,238,241,247,248,249,252,254,263,264,266,268,269,272,291,292,301,302,316,317,318,319,320,321,322,323,325,326,328,329,330,333,334,336,337,338,362,364,367,377,380,381,382,383,384,386,393,395,396,397,398,399,407,408,409,411,412,414,428,433,435,436,437,438,439,440,441,442,443,444,445,449,459,461,462,463,464,466,468,474,479,480,483,486,487,],[62,-100,-101,-102,83,-282,62,62,-128,62,62,-282,-59,62,62,62,-281,-254,-255,62,-257,-258,-259,-260,164,-262,-263,62,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,62,62,-52,-54,-57,62,-250,62,209,-133,62,62,62,62,-199,-267,-128,62,62,-183,-265,62,62,-235,-237,-238,-170,-171,-172,-246,62,62,-53,-224,-249,-252,-132,209,62,-287,-112,62,-115,-116,-242,164,62,62,-266,-256,62,-187,-110,62,-244,62,-245,62,62,-131,62,62,62,-287,-105,-106,62,62,-241,-117,62,-182,-186,-190,62,62,62,62,62,62,62,-217,414,62,433,62,-243,-103,-104,-109,164,62,-111,-236,-287,-233,433,-157,433,-216,-220,62,62,62,459,62,62,-113,-200,-240,-287,-228,-229,62,62,62,62,-108,-107,-226,-227,-232,-234,62,62,62,62,-231,-230,]),'EQUALS':([22,23,38,39,40,56,58,60,61,63,64,65,67,68,69,74,78,79,80,81,85,103,144,196,200,302,],[-287,-287,-282,-32,-33,120,-128,-26,-27,-35,142,143,-26,-27,-287,-282,151,-59,-287,152,-281,-225,206,-25,-224,377,]),'DOT':([22,38,51,58,61,73,74,79,80,82,84,85,98,99,103,118,149,150,155,156,163,166,200,226,238,245,272,301,302,367,381,393,413,415,428,435,456,460,],[-287,87,119,-128,-225,-287,87,119,-287,-287,-287,87,119,-287,-225,-287,-225,-287,-225,-287,-128,-225,-224,-287,-287,119,-287,-287,-287,-287,-287,-287,-128,-225,-287,-287,119,-225,]),'COMMA':([23,58,62,63,74,79,80,85,90,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,129,131,136,138,140,141,159,161,162,163,164,165,166,167,190,193,200,202,203,248,249,250,252,254,255,256,257,258,259,260,261,262,289,291,326,328,329,330,361,362,363,364,365,366,367,368,374,391,392,393,394,410,411,412,413,414,415,425,428,433,439,449,450,459,471,478,],[66,-128,-287,-35,-282,-59,-287,-281,66,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-52,-54,-57,199,-287,-250,203,-287,-199,-267,-128,-287,-287,-183,-265,279,-53,-224,-249,-252,-266,-256,203,-287,-187,329,-225,-191,-192,-193,-194,-195,-257,360,-287,-182,-186,-190,-287,-144,-287,-215,-217,412,-219,-261,-223,427,-196,-197,-287,-198,-214,-216,-220,-128,-287,-183,427,-92,-287,-200,-287,203,-287,-221,203,]),'INTNUMBER_DEC':([26,31,32,33,43,44,45,46,47,58,62,74,79,80,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,138,140,142,158,159,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,200,202,203,230,231,233,234,235,236,241,247,248,249,252,254,263,264,266,268,269,291,316,317,318,319,320,321,322,323,325,326,328,329,330,333,334,336,337,338,362,364,377,382,383,384,386,395,396,397,398,399,411,412,414,433,436,437,438,439,440,441,442,443,444,445,449,459,461,462,463,464,466,468,474,479,480,483,486,487,],[72,-100,-101,-102,-70,-71,-72,107,107,-128,107,-282,-59,-287,-281,-254,-255,107,-257,-258,-259,-260,-261,-262,-263,107,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,107,107,-250,107,107,107,-199,-267,-128,107,107,-183,-265,107,107,-235,-237,-238,-170,-171,-172,-246,107,107,-224,-249,-252,-287,-112,107,-115,-116,-242,107,107,-266,-256,107,-187,-110,107,-244,107,-245,107,107,-287,-105,-106,107,107,-241,-117,107,-182,-186,-190,107,107,107,107,107,107,107,-217,107,-243,-103,-104,-109,107,-111,-236,-287,-233,-216,-220,107,107,107,107,-113,-200,-240,-287,-228,-229,107,107,107,107,-108,-107,-226,-227,-232,-234,107,107,107,107,-231,-230,]),'MASTER':([28,40,58,63,74,79,80,85,103,127,129,131,133,134,135,136,193,197,198,199,200,282,345,347,369,405,406,407,408,409,419,420,421,434,447,448,451,453,469,470,475,],[76,-33,-128,-35,-282,-59,-287,-281,-225,-52,-54,-57,-287,-29,-31,-32,-53,-28,-30,-34,-224,76,76,-151,76,-150,-154,-287,-157,-287,76,-209,-211,-213,-287,-287,76,-210,-155,-156,-212,]),'SLAVE':([28,40,58,63,74,79,80,85,103,127,129,131,133,134,135,136,193,197,198,199,200,282,345,347,369,405,406,407,408,409,419,420,421,434,447,448,451,453,469,470,475,],[77,-33,-128,-35,-282,-59,-287,-281,-225,-52,-54,-57,-287,-29,-31,-32,-53,-28,-30,-34,-224,77,77,-151,77,-150,-154,-287,-157,-287,77,-209,-211,-213,-287,-287,77,-210,-155,-156,-212,]),'SIGNED_INTNUMBER_DEC':([31,32,33,46,47,58,62,74,79,80,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,138,140,142,158,159,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,200,202,203,230,231,233,234,235,236,241,247,248,249,252,254,263,264,266,268,269,291,316,317,318,319,320,321,322,323,325,326,328,329,330,333,334,336,337,338,362,364,377,382,383,384,386,395,396,397,398,399,411,412,414,433,436,437,438,439,440,441,442,443,444,445,449,459,461,462,463,464,466,468,474,479,480,483,486,487,],[-100,-101,-102,108,108,-128,108,-282,-59,-287,-281,-254,-255,108,-257,-258,-259,-260,-261,-262,-263,108,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,108,108,-250,108,108,108,-199,-267,-128,108,108,-183,-265,108,108,-235,-237,-238,-170,-171,-172,-246,108,108,-224,-249,-252,-287,-112,108,-115,-116,-242,108,108,-266,-256,108,-187,-110,108,-244,108,-245,108,108,-287,-105,-106,108,108,-241,-117,108,-182,-186,-190,108,108,108,108,108,108,108,-217,108,-243,-103,-104,-109,108,-111,-236,-287,-233,-216,-220,108,108,108,108,-113,-200,-240,-287,-228,-229,108,108,108,108,-108,-107,-226,-227,-232,-234,108,108,108,108,-231,-230,]),'INTNUMBER_BIN':([31,32,33,46,47,58,62,74,79,80,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,138,140,142,158,159,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,200,202,203,230,231,233,234,235,236,241,247,248,249,252,254,263,264,266,268,269,291,316,317,318,319,320,321,322,323,325,326,328,329,330,333,334,336,337,338,362,364,377,382,383,384,386,395,396,397,398,399,411,412,414,433,436,437,438,439,440,441,442,443,444,445,449,459,461,462,463,464,466,468,474,479,480,483,486,487,],[-100,-101,-102,109,109,-128,109,-282,-59,-287,-281,-254,-255,109,-257,-258,-259,-260,-261,-262,-263,109,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,109,109,-250,109,109,109,-199,-267,-128,109,109,-183,-265,109,109,-235,-237,-238,-170,-171,-172,-246,109,109,-224,-249,-252,-287,-112,109,-115,-116,-242,109,109,-266,-256,109,-187,-110,109,-244,109,-245,109,109,-287,-105,-106,109,109,-241,-117,109,-182,-186,-190,109,109,109,109,109,109,109,-217,109,-243,-103,-104,-109,109,-111,-236,-287,-233,-216,-220,109,109,109,109,-113,-200,-240,-287,-228,-229,109,109,109,109,-108,-107,-226,-227,-232,-234,109,109,109,109,-231,-230,]),'SIGNED_INTNUMBER_BIN':([31,32,33,46,47,58,62,74,79,80,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,138,140,142,158,159,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,200,202,203,230,231,233,234,235,236,241,247,248,249,252,254,263,264,266,268,269,291,316,317,318,319,320,321,322,323,325,326,328,329,330,333,334,336,337,338,362,364,377,382,383,384,386,395,396,397,398,399,411,412,414,433,436,437,438,439,440,441,442,443,444,445,449,459,461,462,463,464,466,468,474,479,480,483,486,487,],[-100,-101,-102,110,110,-128,110,-282,-59,-287,-281,-254,-255,110,-257,-258,-259,-260,-261,-262,-263,110,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,110,110,-250,110,110,110,-199,-267,-128,110,110,-183,-265,110,110,-235,-237,-238,-170,-171,-172,-246,110,110,-224,-249,-252,-287,-112,110,-115,-116,-242,110,110,-266,-256,110,-187,-110,110,-244,110,-245,110,110,-287,-105,-106,110,110,-241,-117,110,-182,-186,-190,110,110,110,110,110,110,110,-217,110,-243,-103,-104,-109,110,-111,-236,-287,-233,-216,-220,110,110,110,110,-113,-200,-240,-287,-228,-229,110,110,110,110,-108,-107,-226,-227,-232,-234,110,110,110,110,-231,-230,]),'INTNUMBER_OCT':([31,32,33,46,47,58,62,74,79,80,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,138,140,142,158,159,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,200,202,203,230,231,233,234,235,236,241,247,248,249,252,254,263,264,266,268,269,291,316,317,318,319,320,321,322,323,325,326,328,329,330,333,334,336,337,338,362,364,377,382,383,384,386,395,396,397,398,399,411,412,414,433,436,437,438,439,440,441,442,443,444,445,449,459,461,462,463,464,466,468,474,479,480,483,486,487,],[-100,-101,-102,111,111,-128,111,-282,-59,-287,-281,-254,-255,111,-257,-258,-259,-260,-261,-262,-263,111,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,111,111,-250,111,111,111,-199,-267,-128,111,111,-183,-265,111,111,-235,-237,-238,-170,-171,-172,-246,111,111,-224,-249,-252,-287,-112,111,-115,-116,-242,111,111,-266,-256,111,-187,-110,111,-244,111,-245,111,111,-287,-105,-106,111,111,-241,-117,111,-182,-186,-190,111,111,111,111,111,111,111,-217,111,-243,-103,-104,-109,111,-111,-236,-287,-233,-216,-220,111,111,111,111,-113,-200,-240,-287,-228,-229,111,111,111,111,-108,-107,-226,-227,-232,-234,111,111,111,111,-231,-230,]),'SIGNED_INTNUMBER_OCT':([31,32,33,46,47,58,62,74,79,80,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,138,140,142,158,159,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,200,202,203,230,231,233,234,235,236,241,247,248,249,252,254,263,264,266,268,269,291,316,317,318,319,320,321,322,323,325,326,328,329,330,333,334,336,337,338,362,364,377,382,383,384,386,395,396,397,398,399,411,412,414,433,436,437,438,439,440,441,442,443,444,445,449,459,461,462,463,464,466,468,474,479,480,483,486,487,],[-100,-101,-102,112,112,-128,112,-282,-59,-287,-281,-254,-255,112,-257,-258,-259,-260,-261,-262,-263,112,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,112,112,-250,112,112,112,-199,-267,-128,112,112,-183,-265,112,112,-235,-237,-238,-170,-171,-172,-246,112,112,-224,-249,-252,-287,-112,112,-115,-116,-242,112,112,-266,-256,112,-187,-110,112,-244,112,-245,112,112,-287,-105,-106,112,112,-241,-117,112,-182,-186,-190,112,112,112,112,112,112,112,-217,112,-243,-103,-104,-109,112,-111,-236,-287,-233,-216,-220,112,112,112,112,-113,-200,-240,-287,-228,-229,112,112,112,112,-108,-107,-226,-227,-232,-234,112,112,112,112,-231,-230,]),'INTNUMBER_HEX':([31,32,33,46,47,58,62,74,79,80,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,138,140,142,158,159,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,200,202,203,230,231,233,234,235,236,241,247,248,249,252,254,263,264,266,268,269,291,316,317,318,319,320,321,322,323,325,326,328,329,330,333,334,336,337,338,362,364,377,382,383,384,386,395,396,397,398,399,411,412,414,433,436,437,438,439,440,441,442,443,444,445,449,459,461,462,463,464,466,468,474,479,480,483,486,487,],[-100,-101,-102,113,113,-128,113,-282,-59,-287,-281,-254,-255,113,-257,-258,-259,-260,-261,-262,-263,113,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,113,113,-250,113,113,113,-199,-267,-128,113,113,-183,-265,113,113,-235,-237,-238,-170,-171,-172,-246,113,113,-224,-249,-252,-287,-112,113,-115,-116,-242,113,113,-266,-256,113,-187,-110,113,-244,113,-245,113,113,-287,-105,-106,113,113,-241,-117,113,-182,-186,-190,113,113,113,113,113,113,113,-217,113,-243,-103,-104,-109,113,-111,-236,-287,-233,-216,-220,113,113,113,113,-113,-200,-240,-287,-228,-229,113,113,113,113,-108,-107,-226,-227,-232,-234,113,113,113,113,-231,-230,]),'SIGNED_INTNUMBER_HEX':([31,32,33,46,47,58,62,74,79,80,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,138,140,142,158,159,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,200,202,203,230,231,233,234,235,236,241,247,248,249,252,254,263,264,266,268,269,291,316,317,318,319,320,321,322,323,325,326,328,329,330,333,334,336,337,338,362,364,377,382,383,384,386,395,396,397,398,399,411,412,414,433,436,437,438,439,440,441,442,443,444,445,449,459,461,462,463,464,466,468,474,479,480,483,486,487,],[-100,-101,-102,114,114,-128,114,-282,-59,-287,-281,-254,-255,114,-257,-258,-259,-260,-261,-262,-263,114,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,114,114,-250,114,114,114,-199,-267,-128,114,114,-183,-265,114,114,-235,-237,-238,-170,-171,-172,-246,114,114,-224,-249,-252,-287,-112,114,-115,-116,-242,114,114,-266,-256,114,-187,-110,114,-244,114,-245,114,114,-287,-105,-106,114,114,-241,-117,114,-182,-186,-190,114,114,114,114,114,114,114,-217,114,-243,-103,-104,-109,114,-111,-236,-287,-233,-216,-220,114,114,114,114,-113,-200,-240,-287,-228,-229,114,114,114,114,-108,-107,-226,-227,-232,-234,114,114,114,114,-231,-230,]),'FLOATNUMBER':([31,32,33,46,47,58,62,74,79,80,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,138,140,142,158,159,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,200,202,203,230,231,233,234,235,236,241,247,248,249,252,254,263,264,266,268,269,291,316,317,318,319,320,321,322,323,325,326,328,329,330,333,334,336,337,338,362,364,377,382,383,384,386,395,396,397,398,399,411,412,414,433,436,437,438,439,440,441,442,443,444,445,449,459,461,462,463,464,466,468,474,479,480,483,486,487,],[-100,-101,-102,115,115,-128,115,-282,-59,-287,-281,-254,-255,115,-257,-258,-259,-260,-261,-262,-263,115,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,115,115,-250,115,115,115,-199,-267,-128,115,115,-183,-265,115,115,-235,-237,-238,-170,-171,-172,-246,115,115,-224,-249,-252,-287,-112,115,-115,-116,-242,115,115,-266,-256,115,-187,-110,115,-244,115,-245,115,115,-287,-105,-106,115,115,-241,-117,115,-182,-186,-190,115,115,115,115,115,115,115,-217,115,-243,-103,-104,-109,115,-111,-236,-287,-233,-216,-220,115,115,115,115,-113,-200,-240,-287,-228,-229,115,115,115,115,-108,-107,-226,-227,-232,-234,115,115,115,115,-231,-230,]),'STRING_LITERAL':([31,32,33,46,47,58,62,74,79,80,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,120,138,140,142,158,159,161,162,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,200,202,203,230,231,233,234,235,236,241,247,248,249,252,254,263,264,266,268,269,291,316,317,318,319,320,321,322,323,325,326,328,329,330,333,334,336,337,338,362,364,377,382,383,384,386,395,396,397,398,399,411,412,414,433,436,437,438,439,440,441,442,443,444,445,449,459,461,462,463,464,466,468,474,479,480,483,486,487,],[-100,-101,-102,116,116,-128,116,-282,-59,-287,-281,-254,-255,116,-257,-258,-259,-260,-261,-262,-263,116,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,116,116,-250,116,116,116,-199,-267,-128,116,116,-183,-265,116,116,-235,-237,-238,-170,-171,-172,-246,116,116,-224,-249,-252,-287,-112,116,-115,-116,-242,116,116,-266,-256,116,-187,-110,116,-244,116,-245,116,116,-287,-105,-106,116,116,-241,-117,116,-182,-186,-190,116,116,116,116,116,116,116,-217,116,-243,-103,-104,-109,116,-111,-236,-287,-233,-216,-220,116,116,116,116,-113,-200,-240,-287,-228,-229,116,116,116,116,-108,-107,-226,-227,-232,-234,116,116,116,116,-231,-230,]),'COLON':([31,32,33,46,47,73,74,84,85,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,147,149,150,157,158,159,161,162,163,164,166,167,168,169,171,173,174,175,176,177,178,179,180,200,208,210,212,213,229,230,231,233,234,235,236,238,239,240,242,243,244,245,246,247,248,249,250,263,264,266,267,269,270,271,281,283,285,292,293,316,317,318,319,320,321,322,323,326,333,334,336,337,338,344,357,382,383,384,385,386,387,389,395,396,397,398,399,400,403,414,436,437,438,439,440,441,442,443,444,445,450,461,462,463,464,465,466,467,468,473,474,479,480,485,486,487,],[-100,-101,-102,-287,-287,-287,-282,-287,-281,158,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,168,-287,-133,-287,228,-287,-287,-199,-267,-128,-287,-183,-265,-287,-287,-235,-237,-238,-170,-171,-172,-246,-287,-287,-224,-287,-136,-132,-287,316,-287,-112,-114,-115,-116,-242,-261,-254,-255,-257,-258,-259,-260,-262,-264,-266,-256,325,-110,-239,-244,334,-245,336,337,342,-147,-135,-131,369,-287,-287,-105,-106,-287,-287,-241,-117,-182,-287,-287,-287,-287,-287,-146,-134,-243,-103,-104,436,-109,437,-256,-287,-111,-236,-287,-233,445,-145,-287,-287,-287,-113,-200,-240,-287,-228,-229,-287,-287,325,-108,-107,-226,-227,479,-232,480,-234,483,-287,-287,-287,-253,-231,-230,]),'GELIF':([31,32,33,74,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,159,161,162,163,166,167,171,173,174,175,176,177,178,200,230,231,233,234,235,236,248,249,263,264,266,269,316,317,318,319,322,323,326,336,382,383,384,386,396,397,398,399,438,439,440,441,442,443,445,461,462,463,464,466,468,479,480,486,487,],[-100,-101,-102,-282,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-199,-267,-128,-183,-265,-235,-237,-238,-170,-171,-172,-246,-224,320,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-287,320,-105,-106,-241,-117,-182,-287,-243,-103,-104,-109,-111,-236,-287,-233,-113,-200,-240,-287,-228,-229,-287,-108,-107,-226,-227,-232,-234,-287,-287,-231,-230,]),'GELSE':([31,32,33,74,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,159,161,162,163,166,167,171,173,174,175,176,177,178,200,230,231,233,234,235,236,248,249,263,264,266,269,316,317,318,319,322,323,326,336,382,383,384,386,396,397,398,399,438,439,440,441,442,443,445,461,462,463,464,466,468,479,480,486,487,],[-100,-101,-102,-282,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-199,-267,-128,-183,-265,-235,-237,-238,-170,-171,-172,-246,-224,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-287,385,-105,-106,-241,-117,-182,-287,-243,-103,-104,-109,-111,-236,-287,-233,-113,-200,-240,-287,-228,-229,-287,-108,-107,-226,-227,-232,-234,-287,-287,-231,-230,]),'DEDENT':([31,32,33,40,58,63,74,79,80,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,127,129,131,133,134,135,136,159,161,162,163,166,167,171,173,174,175,176,177,178,193,197,198,199,200,230,231,233,234,235,236,248,249,263,264,266,268,269,306,307,308,309,316,317,318,319,322,323,326,335,336,377,378,382,383,384,386,388,395,396,397,398,399,401,407,408,409,420,421,430,431,434,435,438,439,440,441,442,443,445,447,448,452,453,458,460,461,462,463,464,466,468,469,470,472,473,474,475,476,477,479,480,482,483,484,485,486,487,488,],[-100,-101,-102,-33,-128,-35,-282,-59,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-52,-54,-57,-287,-29,-31,-32,-287,-199,-267,-128,-183,-265,-235,-237,-238,-170,-171,-172,-246,-53,-28,-30,-34,-224,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-287,-245,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,397,-287,-287,-165,-243,-103,-104,-109,438,440,-111,-236,-287,-233,446,-287,-157,-287,-208,-211,-178,455,-213,-287,-113,-200,-240,-287,-228,-229,-287,-287,-287,-207,-210,-287,-213,-108,-107,-226,-227,-232,-234,-155,-156,481,-287,-287,-212,-179,-183,-287,-287,-173,-287,-177,-253,-231,-230,-176,]),'ELIF':([31,32,33,74,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,159,161,162,163,166,167,171,173,174,175,176,177,178,200,230,231,233,234,235,236,248,249,263,264,266,269,316,317,318,319,322,323,326,336,382,383,384,386,396,397,398,399,438,439,440,441,442,443,445,461,462,463,464,466,468,479,480,486,487,],[-100,-101,-102,-282,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-199,-267,-128,-183,-265,-235,-237,-238,-170,-171,-172,-246,-224,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-287,-287,-105,-106,-241,-117,-182,-287,-243,-103,-104,-109,-111,-236,444,-233,-113,-200,-240,444,-228,-229,-287,-108,-107,-226,-227,-232,-234,-287,-287,-231,-230,]),'ELSE':([31,32,33,74,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,159,161,162,163,166,167,171,173,174,175,176,177,178,200,230,231,233,234,235,236,248,249,263,264,266,269,316,317,318,319,322,323,326,336,382,383,384,386,396,397,398,399,438,439,440,441,442,443,445,461,462,463,464,466,468,479,480,486,487,],[-100,-101,-102,-282,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-199,-267,-128,-183,-265,-235,-237,-238,-170,-171,-172,-246,-224,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,-287,-287,-105,-106,-241,-117,-182,-287,-243,-103,-104,-109,-111,-236,-287,-233,-113,-200,-240,465,-228,-229,-287,-108,-107,-226,-227,-232,-234,-287,-287,-231,-230,]),'VARIABLE':([31,32,33,74,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,159,161,162,163,166,167,171,173,174,175,176,177,178,200,228,230,231,233,234,235,236,248,249,263,264,266,269,304,306,307,308,309,316,317,318,319,322,323,326,336,342,377,378,379,382,383,384,386,396,397,398,399,430,431,435,438,439,440,441,442,443,445,458,460,461,462,463,464,466,468,473,474,475,476,477,479,480,482,483,484,485,486,487,488,],[-100,-101,-102,-282,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-199,-267,-128,-183,-265,-235,-237,-238,-170,-171,-172,-246,-224,312,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,312,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,312,-287,-165,312,-243,-103,-104,-109,-111,-236,-287,-233,-178,312,-287,-113,-200,-240,-287,-228,-229,-287,-287,-213,-108,-107,-226,-227,-232,-234,-287,-287,-212,-179,-183,-287,-287,-173,-287,-177,-253,-231,-230,-176,]),'VAR':([31,32,33,74,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,159,161,162,163,166,167,171,173,174,175,176,177,178,200,228,230,231,233,234,235,236,248,249,263,264,266,269,304,306,307,308,309,316,317,318,319,322,323,326,336,342,377,378,379,382,383,384,386,396,397,398,399,430,431,435,438,439,440,441,442,443,445,458,460,461,462,463,464,466,468,473,474,475,476,477,479,480,482,483,484,485,486,487,488,],[-100,-101,-102,-282,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-199,-267,-128,-183,-265,-235,-237,-238,-170,-171,-172,-246,-224,313,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,313,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,313,-287,-165,313,-243,-103,-104,-109,-111,-236,-287,-233,-178,313,-287,-113,-200,-240,-287,-228,-229,-287,-287,-213,-108,-107,-226,-227,-232,-234,-287,-287,-212,-179,-183,-287,-287,-173,-287,-177,-253,-231,-230,-176,]),'INSTANCE':([31,32,33,74,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,159,161,162,163,166,167,171,173,174,175,176,177,178,200,228,230,231,233,234,235,236,248,249,263,264,266,269,304,306,307,308,309,316,317,318,319,322,323,326,336,342,377,378,379,382,383,384,386,396,397,398,399,430,431,435,438,439,440,441,442,443,445,458,460,461,462,463,464,466,468,473,474,475,476,477,479,480,482,483,484,485,486,487,488,],[-100,-101,-102,-282,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-199,-267,-128,-183,-265,-235,-237,-238,-170,-171,-172,-246,-224,314,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,314,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,314,-287,-165,314,-243,-103,-104,-109,-111,-236,-287,-233,-178,314,-287,-113,-200,-240,-287,-228,-229,-287,-287,-213,-108,-107,-226,-227,-232,-234,-287,-287,-212,-179,-183,-287,-287,-173,-287,-177,-253,-231,-230,-176,]),'INS':([31,32,33,74,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,159,161,162,163,166,167,171,173,174,175,176,177,178,200,228,230,231,233,234,235,236,248,249,263,264,266,269,304,306,307,308,309,316,317,318,319,322,323,326,336,342,377,378,379,382,383,384,386,396,397,398,399,430,431,435,438,439,440,441,442,443,445,458,460,461,462,463,464,466,468,473,474,475,476,477,479,480,482,483,484,485,486,487,488,],[-100,-101,-102,-282,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-199,-267,-128,-183,-265,-235,-237,-238,-170,-171,-172,-246,-224,315,-287,-112,-114,-115,-116,-242,-266,-256,-110,-239,-244,-245,315,-166,-167,-168,-169,-287,-287,-105,-106,-241,-117,-182,-287,315,-287,-165,315,-243,-103,-104,-109,-111,-236,-287,-233,-178,315,-287,-113,-200,-240,-287,-228,-229,-287,-287,-213,-108,-107,-226,-227,-232,-234,-287,-287,-212,-179,-183,-287,-287,-173,-287,-177,-253,-231,-230,-176,]),'RBRACE':([39,40,63,148,211,],[-32,-33,-35,212,292,]),'RPAREN':([40,58,59,63,74,79,80,85,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,124,127,129,131,132,133,134,135,136,159,160,161,162,163,165,166,167,186,187,188,189,190,191,193,197,198,199,200,241,248,249,251,252,253,254,255,256,257,258,259,260,261,262,274,277,278,279,282,324,326,327,328,329,330,343,345,346,347,348,349,371,372,373,391,392,393,394,404,405,406,407,408,409,423,424,425,426,427,428,434,439,447,448,469,470,475,],[-33,-128,-287,-35,-282,-59,-287,-281,-254,-255,-287,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,-287,-52,-54,-57,196,-287,-29,-31,-32,-287,249,-199,-267,-128,-287,-183,-265,276,-287,-46,-48,-49,-50,-53,-28,-30,-34,-224,-287,-266,-256,326,-287,-185,-187,-188,-189,-191,-192,-193,-194,-195,-257,339,-45,-47,-51,344,389,-182,-184,-186,-190,-287,403,-287,-149,-151,-152,-153,422,-287,-88,-196,-197,-287,-198,-148,-150,-154,-287,-157,-287,-86,-87,-89,-90,-91,-92,-213,-200,-287,-287,-155,-156,-212,]),'SEMICOLON':([40,58,63,74,79,80,85,103,127,129,131,133,134,135,136,193,197,198,199,200,348,407,408,409,434,447,448,469,470,475,],[-33,-128,-35,-282,-59,-287,-281,-225,-52,-54,-57,-287,-29,-31,-32,-53,-28,-30,-34,-224,406,-287,-157,-287,-213,-287,-287,-155,-156,-212,]),'INPUT':([40,58,63,74,79,80,85,103,127,129,131,133,134,135,136,193,197,198,199,200,282,345,347,369,405,406,407,408,409,419,420,421,434,447,448,451,453,469,470,475,],[-33,-128,-35,-282,-59,-287,-281,-225,-52,-54,-57,-287,-29,-31,-32,-53,-28,-30,-34,-224,352,352,-151,352,-150,-154,-287,-157,-287,352,-209,-211,-213,-287,-287,352,-210,-155,-156,-212,]),'IN':([40,58,63,74,79,80,85,103,118,127,129,131,133,134,135,136,193,197,198,199,200,272,282,345,347,369,405,406,407,408,409,419,420,421,434,447,448,451,453,469,470,475,],[-33,-128,-35,-282,-59,-287,-281,-225,169,-52,-54,-57,-287,-29,-31,-32,-53,-28,-30,-34,-224,338,353,353,-151,353,-150,-154,-287,-157,-287,353,-209,-211,-213,-287,-287,353,-210,-155,-156,-212,]),'OUTPUT':([40,58,63,74,79,80,85,103,127,129,131,133,134,135,136,193,197,198,199,200,282,345,347,369,405,406,407,408,409,419,420,421,434,447,448,451,453,469,470,475,],[-33,-128,-35,-282,-59,-287,-281,-225,-52,-54,-57,-287,-29,-31,-32,-53,-28,-30,-34,-224,354,354,-151,354,-150,-154,-287,-157,-287,354,-209,-211,-213,-287,-287,354,-210,-155,-156,-212,]),'OUT':([40,58,63,74,79,80,85,103,127,129,131,133,134,135,136,193,197,198,199,200,282,345,347,369,405,406,407,408,409,419,420,421,434,447,448,451,453,469,470,475,],[-33,-128,-35,-282,-59,-287,-281,-225,-52,-54,-57,-287,-29,-31,-32,-53,-28,-30,-34,-224,355,355,-151,355,-150,-154,-287,-157,-287,355,-209,-211,-213,-287,-287,355,-210,-155,-156,-212,]),'INOUT':([40,58,63,74,79,80,85,103,127,129,131,133,134,135,136,193,197,198,199,200,282,345,347,369,405,406,407,408,409,419,420,421,434,447,448,451,453,469,470,475,],[-33,-128,-35,-282,-59,-287,-281,-225,-52,-54,-57,-287,-29,-31,-32,-53,-28,-30,-34,-224,356,356,-151,356,-150,-154,-287,-157,-287,356,-209,-211,-213,-287,-287,356,-210,-155,-156,-212,]),'RARROW':([58,74,79,80,85,99,103,125,127,129,131,161,163,166,193,200,262,276,439,],[-128,-282,-59,-287,-281,-287,-225,192,-52,-54,195,-199,-201,-225,-53,-224,331,341,-200,]),'RBRACKET':([58,62,74,79,80,85,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,137,138,139,140,141,156,159,161,162,163,164,166,167,200,201,202,203,209,248,249,250,284,286,287,288,289,290,291,325,326,358,359,360,361,362,363,364,365,366,367,368,390,410,411,412,413,414,415,433,439,449,450,457,459,471,478,],[-128,-287,-282,-59,-287,-281,-254,-255,-257,-258,-259,-260,-261,-262,-263,-264,-225,-268,-269,-270,-271,-272,-273,-274,-275,-276,-277,-278,-280,-279,200,-287,-248,-250,-251,227,-287,-199,-267,-128,-287,-183,-265,-224,-247,-249,-252,285,-266,-256,-251,357,-287,-138,-140,-141,-142,-287,-287,-182,-137,-139,-143,-144,-287,-215,-217,-218,-219,-261,-223,439,-214,-216,-220,-128,-287,-183,-287,-200,-287,-251,475,-287,-221,-223,]),'LARROW':([58,74,80,85,99,103,161,163,166,200,262,367,413,415,439,456,],[-128,-282,-287,-281,-287,-225,-199,-201,-225,-224,330,-287,449,-225,-200,474,]),'LBRACE':([73,74,84,85,150,],[148,-282,148,-281,148,]),'AS':([74,82,85,301,],[-282,154,-281,154,]),'EXCEPT':([74,82,85,153,155,226,301,376,],[-282,-287,-281,224,-96,-95,-287,224,]),'BARROW':([74,85,99,161,163,166,200,262,439,],[-282,-281,-287,-199,-201,-225,-224,332,-200,]),'IF':([120,142,268,316,336,377,445,479,480,483,],[179,179,179,179,179,179,179,179,179,179,]),'CASE':([120,142,268,316,336,377,445,479,480,483,],[180,180,180,180,180,180,180,180,180,180,]),'FOR':([120,142,268,316,336,377,445,479,480,483,],[181,181,181,181,181,181,181,181,181,181,]),'INDENT':([123,172,232,265,305,418,],[185,268,321,333,379,451,]),'QUESTIONMARK':([220,221,296,297,422,],[-287,-83,370,-84,-85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'file_input_end':([0,],[1,]),'file_input':([0,],[2,]),'package':([0,],[3,]),'module':([0,],[5,]),'statements':([0,],[6,]),'statement_stmt':([0,6,],[7,54,]),'statement':([0,6,143,206,],[8,8,205,280,]),'function_def':([0,6,143,206,],[9,9,9,9,]),'function_cons':([0,6,143,206,],[10,10,10,10,]),'operator_def':([0,6,143,206,],[11,11,11,11,]),'operator_cons':([0,6,143,206,],[12,12,12,12,]),'operator_infix':([0,6,143,206,],[13,13,13,13,]),'container_def':([0,6,143,206,],[14,14,14,14,]),'interface_def':([0,6,143,206,],[15,15,15,15,]),'type_def':([0,6,143,206,],[16,16,16,16,]),'type_rename':([0,6,143,206,],[17,17,17,17,]),'gen_structure':([0,6,143,158,168,206,233,264,321,333,334,337,395,436,437,],[18,18,18,234,266,18,266,266,234,266,234,266,266,234,234,]),'import_decl':([0,6,143,206,],[19,19,19,19,]),'register_decl':([0,6,143,206,],[20,20,20,20,]),'context_def':([0,6,143,206,],[21,21,21,21,]),'identifier':([0,6,27,29,30,34,36,37,46,47,48,57,62,70,75,83,94,102,120,122,124,128,138,142,143,152,154,158,159,164,165,168,169,179,180,181,183,185,187,206,209,227,228,233,241,247,252,264,268,275,286,291,298,304,310,311,316,320,321,325,330,331,332,333,334,336,337,338,342,351,362,372,375,377,379,381,395,414,431,432,433,436,437,444,445,449,459,474,479,480,483,],[22,22,73,80,80,82,84,80,99,99,118,80,99,80,150,156,99,99,99,80,80,80,99,99,22,80,226,238,99,99,99,99,99,99,99,272,80,80,80,22,80,301,302,99,99,99,99,99,99,80,80,367,80,302,80,381,99,99,238,99,99,393,393,99,238,99,99,99,302,80,367,80,428,99,302,435,99,99,302,80,367,238,238,99,99,99,367,99,99,99,99,]),'argument_end':([0,6,23,59,69,133,143,148,206,447,448,],[24,24,65,134,144,197,24,211,24,134,134,]),'operators':([0,6,71,143,206,],[25,25,146,25,25,]),'infix_type_decl':([0,6,143,206,],[26,26,26,26,]),'gen_if_structure':([0,6,143,158,168,206,233,264,321,333,334,337,395,436,437,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'gen_case_structure':([0,6,143,158,168,206,233,264,321,333,334,337,395,436,437,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'gen_for_structure':([0,6,143,158,168,206,233,264,321,333,334,337,395,436,437,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'scopes':([0,6,27,29,30,34,36,37,46,47,48,57,62,70,75,83,94,102,120,122,124,128,138,142,143,152,154,158,159,164,165,168,169,179,180,181,183,185,187,206,209,227,228,233,241,247,252,264,268,275,286,291,298,304,310,311,316,320,321,325,330,331,332,333,334,336,337,338,342,351,362,372,375,377,379,381,395,414,431,432,433,436,437,444,445,449,459,474,479,480,483,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'argument_name':([0,6,22,23,59,69,133,143,148,206,223,429,447,448,],[39,39,60,67,136,39,136,39,39,39,60,60,136,136,]),'empty':([0,6,22,23,46,47,57,59,62,69,70,73,80,82,84,94,99,102,118,120,124,133,138,142,143,147,148,150,153,156,158,159,164,165,168,169,179,180,185,187,206,208,209,213,220,223,226,230,233,238,241,247,252,264,268,272,282,286,291,301,302,316,317,320,321,325,330,333,334,336,337,338,345,362,367,372,376,377,380,381,393,395,398,407,409,414,428,429,433,435,436,437,441,444,445,447,448,449,458,459,473,474,479,480,483,],[40,40,61,68,103,103,126,40,103,40,126,149,103,155,149,103,166,103,103,103,191,40,103,103,40,210,40,149,225,103,103,103,103,256,103,103,103,103,126,191,40,283,290,210,297,300,103,319,103,166,103,103,256,103,103,103,349,290,366,155,103,103,386,103,103,103,103,103,103,103,103,103,349,366,415,426,225,103,434,103,103,103,443,434,434,103,103,300,366,460,103,103,466,103,103,40,40,103,477,366,484,103,103,103,103,]),'operators_begin':([0,6,71,143,206,],[41,41,41,41,41,]),'operator_end':([0,6,41,71,143,206,],[42,42,88,42,42,42,]),'scope':([0,6,27,29,30,34,36,37,46,47,48,57,62,70,75,83,94,102,120,122,124,128,138,142,143,152,154,158,159,164,165,168,169,179,180,181,183,185,187,206,209,227,228,233,241,247,252,264,268,275,286,291,298,304,310,311,316,320,321,325,330,331,332,333,334,336,337,338,342,351,362,372,375,377,379,381,395,414,431,432,433,436,437,444,445,449,459,474,479,480,483,],[49,49,49,49,49,49,49,86,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'operator_one':([0,6,41,71,143,206,],[50,50,89,50,50,50,]),'pointer':([0,6,27,29,30,34,36,37,46,47,48,57,62,70,75,83,94,102,120,122,124,128,138,142,143,152,154,158,159,164,165,168,169,179,180,181,183,185,187,206,209,227,228,233,241,247,252,264,268,275,286,291,298,304,310,311,316,320,321,325,330,331,332,333,334,336,337,338,342,351,362,372,375,377,379,381,395,414,431,432,433,436,437,444,445,449,459,474,479,480,483,],[51,51,51,79,79,51,51,51,98,98,51,79,98,79,51,51,98,98,98,79,79,79,98,98,51,79,51,245,98,98,98,98,98,98,98,51,79,79,79,51,79,51,51,98,98,98,98,98,98,79,79,98,79,51,79,51,98,98,245,98,98,51,51,98,245,98,98,98,51,79,98,79,51,98,51,51,98,98,51,456,98,245,245,98,98,98,98,98,98,98,98,]),'argument_list':([22,23,223,429,],[56,64,299,454,]),'tensor_list':([22,46,47,62,73,80,82,84,94,99,102,118,120,138,142,150,156,158,159,164,165,168,169,179,180,226,233,238,241,247,252,264,268,272,291,301,302,316,320,321,325,330,333,334,336,337,338,362,367,377,381,393,395,414,428,433,435,436,437,444,445,449,459,474,479,480,483,],[58,96,96,96,58,58,58,58,96,163,96,58,96,96,96,58,58,243,96,96,96,96,96,96,96,58,96,163,96,96,96,96,96,58,96,58,58,96,96,243,96,96,96,243,96,96,96,96,413,96,58,163,96,96,58,96,58,243,243,96,96,96,96,96,96,96,96,]),'precedence':([26,],[71,]),'bus_direction':([28,282,345,369,419,451,],[75,350,350,350,350,350,]),'type_name':([29,30,57,70,122,124,128,152,183,185,187,209,275,286,298,310,351,372,],[78,81,131,131,131,131,131,222,131,131,131,291,131,291,375,131,131,375,]),'expression':([46,47,62,94,102,120,138,142,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,377,395,414,433,436,437,444,445,449,459,474,479,480,483,],[91,117,141,160,167,178,141,178,229,248,250,261,229,267,270,271,229,324,167,261,229,178,368,178,387,229,390,391,229,229,178,229,400,368,178,229,450,368,229,229,467,178,471,478,485,178,178,178,]),'unary_operation':([46,47,62,94,102,120,138,142,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,377,395,414,433,436,437,444,445,449,459,474,479,480,483,],[92,92,92,92,92,92,92,92,239,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,239,92,92,92,239,92,92,92,92,92,92,92,92,239,239,92,92,92,92,92,92,92,92,]),'binary_operation':([46,47,62,94,102,120,138,142,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,377,395,414,433,436,437,444,445,449,459,474,479,480,483,],[93,93,93,93,93,93,93,93,240,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,240,93,93,93,240,93,93,93,93,93,93,93,93,240,240,93,93,93,93,93,93,93,93,]),'partial_selection':([46,47,62,94,102,120,138,142,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,331,332,333,334,336,337,338,362,377,395,414,433,436,437,444,445,449,459,474,479,480,483,],[95,95,95,95,95,95,95,95,242,95,95,262,95,95,95,95,95,95,95,262,95,95,95,95,95,242,95,95,392,394,95,242,95,95,95,95,95,95,95,95,242,242,95,95,95,95,95,95,95,95,]),'function_call':([46,47,62,94,102,120,138,142,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,377,395,414,433,436,437,444,445,449,459,474,479,480,483,],[97,97,97,97,97,97,97,97,244,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,244,97,97,97,244,97,97,97,97,97,97,97,97,244,244,97,97,97,97,97,97,97,97,]),'const_expression':([46,47,62,94,102,120,138,142,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,377,395,414,433,436,437,444,445,449,459,474,479,480,483,],[100,100,100,100,100,100,100,100,246,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,246,100,100,100,246,100,100,100,100,100,100,100,100,246,246,100,100,100,100,100,100,100,100,]),'operator_decl':([46,47,62,94,102,120,138,142,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,377,395,414,433,436,437,444,445,449,459,474,479,480,483,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'int_number':([46,47,62,94,102,120,138,142,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,377,395,414,433,436,437,444,445,449,459,474,479,480,483,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'float_number':([46,47,62,94,102,120,138,142,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,377,395,414,433,436,437,444,445,449,459,474,479,480,483,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'string_literal':([46,47,62,94,102,120,138,142,158,159,164,165,168,169,179,180,233,241,247,252,264,268,291,316,320,321,325,330,333,334,336,337,338,362,377,395,414,433,436,437,444,445,449,459,474,479,480,483,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'cons_indent':([57,70,],[121,145,]),'input_typechain_list':([57,70,185,],[122,122,275,]),'typechain_one':([57,70,122,124,183,185,187,275,351,],[125,125,184,190,274,125,190,184,409,]),'types':([57,70,122,124,183,185,187,275,310,351,],[127,127,127,127,127,127,127,127,380,127,]),'types_begin':([57,70,122,124,183,185,187,275,310,351,],[128,128,128,128,128,128,128,128,128,128,]),'type_end':([57,70,122,124,128,183,185,187,275,310,351,],[129,129,129,129,193,129,129,129,129,129,129,]),'type':([57,70,122,124,128,183,185,187,275,310,351,],[130,130,130,130,194,130,130,130,130,130,130,]),'arguments':([59,447,448,],[132,469,470,]),'arguments_begin':([59,447,448,],[133,133,133,]),'argument':([59,133,447,448,],[135,198,135,135,]),'expressions':([62,164,414,459,],[137,137,137,137,]),'expressions_begin':([62,164,414,459,],[138,138,138,138,]),'expression_end':([62,138,164,414,459,],[139,201,139,139,139,]),'expression_comma':([62,138,164,414,459,],[140,202,140,140,140,]),'inherit':([73,84,150,],[147,157,213,]),'keyword_as':([82,301,],[153,376,]),'tensor_select_list':([99,238,367,393,],[161,161,161,161,]),'instance_port_list':([99,238,367,458,],[162,162,162,476,]),'suite_indent':([120,142,316,336,377,445,479,480,483,],[170,204,382,398,430,468,486,487,488,]),'suite':([120,142,268,316,336,377,445,479,480,483,],[171,171,335,171,171,171,171,171,171,171,]),'structure':([120,142,268,316,336,377,445,479,480,483,],[173,173,173,173,173,173,173,173,173,173,]),'expression_stmt':([120,142,268,316,336,377,445,479,480,483,],[174,174,174,174,174,174,174,174,174,174,]),'if_structure':([120,142,268,316,336,377,445,479,480,483,],[175,175,175,175,175,175,175,175,175,175,]),'case_structure':([120,142,268,316,336,377,445,479,480,483,],[176,176,176,176,176,176,176,176,176,176,]),'for_structure':([120,142,268,316,336,377,445,479,480,483,],[177,177,177,177,177,177,177,177,177,177,]),'output_typechain_list':([122,275,],[182,340,]),'typechains':([124,],[186,]),'typechains_begin':([124,],[187,]),'typechain_end':([124,187,],[188,277,]),'typechain':([124,187,],[189,278,]),'parameterdef_list':([147,213,],[208,293,]),'constructor_list':([151,],[214,]),'constructors':([151,],[215,]),'constructors_begin':([151,],[216,]),'constructor_end':([151,216,],[217,294,]),'constructor':([151,216,],[218,295,]),'constructor_one':([151,216,],[219,219,]),'constructor_name':([151,216,],[220,220,]),'keyword_except':([153,376,],[223,429,]),'gsuite_indent':([158,334,436,437,],[230,396,461,462,]),'gsuite':([158,321,334,436,437,],[231,388,231,231,231,]),'case_list':([158,168,321,333,334,337,436,437,],[233,264,233,395,233,264,233,233,]),'gexpression_stmt':([158,321,334,436,437,],[235,235,235,235,235,]),'case_entry':([158,168,233,264,321,333,334,337,395,436,437,],[236,236,322,322,236,236,236,236,322,236,236,]),'gexpression':([158,321,334,436,437,],[237,237,237,237,237,]),'instance_ports':([165,],[251,]),'instance_ports_begin':([165,],[252,]),'instance_port_end':([165,252,],[253,327,]),'instance_port':([165,252,],[254,328,]),'instance_port_one':([165,252,],[255,255,]),'instance_name':([165,252,],[257,257,]),'input_instance_port':([165,252,],[258,258,]),'output_instance_port':([165,252,],[259,259,]),'inout_instance_port':([165,252,],[260,260,]),'case_list_indent':([168,337,],[263,399,]),'bus_list':([208,],[281,]),'parameterdefs':([209,],[284,]),'parameterdefs_begin':([209,],[286,]),'parameterdef_end':([209,286,],[287,358,]),'parameterdef':([209,286,],[288,359,]),'parameterdef_one':([209,286,],[289,289,]),'constructor_param_list':([220,],[296,]),'declarations_indent':([228,342,],[303,402,]),'declarations':([228,342,379,],[304,304,431,]),'declaration':([228,304,342,379,431,],[306,378,306,306,378,]),'variable_def':([228,304,342,379,431,],[307,307,307,307,307,]),'anonymous_function_def':([228,304,342,379,431,],[308,308,308,308,308,]),'instance_def':([228,304,342,379,431,],[309,309,309,309,309,]),'keyword_variable':([228,304,342,379,431,],[310,310,310,310,310,]),'keyword_instance':([228,304,342,379,431,],[311,311,311,311,311,]),'gelifs':([230,],[317,]),'gelif_one':([230,317,],[318,384,]),'buses':([282,],[343,]),'buses_begin':([282,],[345,]),'bus_end':([282,345,],[346,404,]),'bus':([282,345,],[347,405,]),'bus_one':([282,345,369,419,451,],[348,348,421,421,421,]),'port_direction':([282,345,369,419,451,],[351,351,351,351,351,]),'parameters':([291,433,459,],[361,457,457,]),'parameters_begin':([291,433,459,],[362,362,362,]),'parameter_end':([291,362,433,459,],[363,410,363,363,]),'parameter':([291,362,433,459,],[364,411,364,364,]),'parameter_one':([291,362,433,459,],[365,365,365,365,]),'constructor_params':([298,],[371,]),'constructor_params_begin':([298,],[372,]),'constructor_param_one':([298,372,],[373,424,]),'constructor_param':([298,372,],[374,425,]),'gels':([317,],[383,]),'interface_name':([350,],[407,]),'interface_bus_list_indent':([369,],[416,]),'interface_bus_list':([369,451,],[417,472,]),'interface_buses':([369,451,],[419,419,]),'interface_bus':([369,419,451,],[420,452,420,]),'constructor_param_end':([372,],[423,]),'parameter_list':([380,407,409,435,],[432,447,448,458,]),'elifs':([398,],[441,]),'elif_one':([398,441,],[442,464,]),'els':([441,],[463,]),'initial_value':([456,],[473,]),'structure_maybe':([473,],[482,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file_input_end","S'",1,None,None,None),
  ('file_input_end -> file_input ENDMARKER','file_input_end',2,'p_file_input_end','parser.py',8),
  ('file_input -> package','file_input',1,'p_file_input','parser.py',15),
  ('file_input -> NEWLINE','file_input',1,'p_file_input','parser.py',16),
  ('file_input -> package NEWLINE','file_input',2,'p_file_input','parser.py',17),
  ('package -> module','package',1,'p_package','parser.py',30),
  ('module -> statements','module',1,'p_module','parser.py',38),
  ('statements -> statements statement_stmt','statements',2,'p_statements','parser.py',46),
  ('statements -> statement_stmt','statements',1,'p_statements_one','parser.py',60),
  ('statement_stmt -> statement NEWLINE','statement_stmt',2,'p_statement_stmt','parser.py',68),
  ('statement_stmt -> statement','statement_stmt',1,'p_statement_stmt','parser.py',69),
  ('statement -> function_def','statement',1,'p_statement','parser.py',77),
  ('statement -> function_cons','statement',1,'p_statement','parser.py',78),
  ('statement -> operator_def','statement',1,'p_statement','parser.py',79),
  ('statement -> operator_cons','statement',1,'p_statement','parser.py',80),
  ('statement -> operator_infix','statement',1,'p_statement','parser.py',81),
  ('statement -> container_def','statement',1,'p_statement','parser.py',82),
  ('statement -> interface_def','statement',1,'p_statement','parser.py',83),
  ('statement -> type_def','statement',1,'p_statement','parser.py',84),
  ('statement -> type_rename','statement',1,'p_statement','parser.py',85),
  ('statement -> gen_structure','statement',1,'p_statement','parser.py',86),
  ('statement -> import_decl','statement',1,'p_statement','parser.py',87),
  ('statement -> register_decl','statement',1,'p_statement','parser.py',88),
  ('statement -> context_def','statement',1,'p_statement','parser.py',89),
  ('function_def -> identifier argument_list EQUALS suite_indent','function_def',4,'p_function_def','parser.py',97),
  ('argument_list -> LPAREN arguments RPAREN','argument_list',3,'p_argument_list','parser.py',105),
  ('argument_list -> argument_name','argument_list',1,'p_argument_list_one','parser.py',113),
  ('argument_list -> empty','argument_list',1,'p_argument_list_empty','parser.py',121),
  ('arguments -> arguments_begin argument_end','arguments',2,'p_arguments','parser.py',129),
  ('arguments -> argument_end','arguments',1,'p_arguments_one','parser.py',140),
  ('arguments_begin -> arguments_begin argument','arguments_begin',2,'p_arguments_begin','parser.py',148),
  ('arguments_begin -> argument','arguments_begin',1,'p_arguments_begin_one','parser.py',156),
  ('argument_end -> argument_name','argument_end',1,'p_argument_end','parser.py',164),
  ('argument_end -> empty','argument_end',1,'p_argument_end_empty','parser.py',172),
  ('argument -> argument_name COMMA','argument',2,'p_argument','parser.py',180),
  ('argument_name -> ID','argument_name',1,'p_argument_name','parser.py',188),
  ('operator_def -> OPERATOR argument_list EQUALS suite_indent','operator_def',4,'p_operator_def','parser.py',196),
  ('operator_def -> argument_end OPERATOR argument_end EQUALS statement','operator_def',5,'p_operator_def_binary','parser.py',204),
  ('operator_def -> OPERATOR argument_end EQUALS statement','operator_def',4,'p_operator_def_unary','parser.py',213),
  ('function_cons -> identifier DUALCOLON cons_indent','function_cons',3,'p_function_cons','parser.py',222),
  ('input_typechain_list -> LPAREN typechains RPAREN RARROW','input_typechain_list',4,'p_input_typechain_list','parser.py',230),
  ('input_typechain_list -> typechain_one RARROW','input_typechain_list',2,'p_input_typechain_list_one','parser.py',238),
  ('input_typechain_list -> empty','input_typechain_list',1,'p_input_typechain_list_empty','parser.py',246),
  ('output_typechain_list -> LPAREN typechain_one RPAREN','output_typechain_list',3,'p_output_typechain_list_paren','parser.py',254),
  ('output_typechain_list -> typechain_one','output_typechain_list',1,'p_output_typechain_list','parser.py',262),
  ('typechains -> typechains_begin typechain_end','typechains',2,'p_typechains','parser.py',270),
  ('typechains -> typechain_end','typechains',1,'p_typechains_one','parser.py',281),
  ('typechains_begin -> typechains_begin typechain','typechains_begin',2,'p_typechains_begin','parser.py',292),
  ('typechains_begin -> typechain','typechains_begin',1,'p_typechains_begin_one','parser.py',300),
  ('typechain_end -> typechain_one','typechain_end',1,'p_typechain_end','parser.py',308),
  ('typechain_end -> empty','typechain_end',1,'p_typechain_end_empty','parser.py',316),
  ('typechain -> typechain_one COMMA','typechain',2,'p_typechain','parser.py',324),
  ('typechain_one -> types','typechain_one',1,'p_typechain_one','parser.py',332),
  ('types -> types_begin type_end','types',2,'p_types','parser.py',340),
  ('types -> type_end','types',1,'p_types_one','parser.py',348),
  ('types_begin -> types_begin type','types_begin',2,'p_types_begin','parser.py',356),
  ('types_begin -> type','types_begin',1,'p_types_begin_one','parser.py',364),
  ('type_end -> type_name','type_end',1,'p_type_end','parser.py',372),
  ('type -> type_name RARROW','type',2,'p_type','parser.py',380),
  ('type_name -> pointer','type_name',1,'p_type_name','parser.py',388),
  ('cons_indent -> input_typechain_list output_typechain_list NEWLINE','cons_indent',3,'p_cons_indent','parser.py',396),
  ('cons_indent -> NEWLINE INDENT input_typechain_list output_typechain_list NEWLINE DEDENT','cons_indent',6,'p_cons_indent','parser.py',397),
  ('operator_cons -> operators DUALCOLON cons_indent','operator_cons',3,'p_operator_cons','parser.py',409),
  ('operator_infix -> infix_type_decl precedence operators NEWLINE','operator_infix',4,'p_operator_infix','parser.py',418),
  ('operators -> operators_begin operator_end','operators',2,'p_operators','parser.py',427),
  ('operators -> operator_end','operators',1,'p_operators_one','parser.py',434),
  ('operators_begin -> operators_begin operator_one','operators_begin',2,'p_operators_begin','parser.py',441),
  ('operators_begin -> operator_one','operators_begin',1,'p_operators_begin_one','parser.py',449),
  ('operator_one -> OPERATOR COMMA','operator_one',2,'p_operator_one','parser.py',457),
  ('operator_end -> OPERATOR','operator_end',1,'p_operator_end','parser.py',465),
  ('infix_type_decl -> INFIX','infix_type_decl',1,'p_infix_type_decl','parser.py',472),
  ('infix_type_decl -> INFIXR','infix_type_decl',1,'p_infix_type_decl','parser.py',473),
  ('infix_type_decl -> INFIXL','infix_type_decl',1,'p_infix_type_decl','parser.py',474),
  ('precedence -> INTNUMBER_DEC','precedence',1,'p_precedence','parser.py',482),
  ('type_def -> DATA type_name EQUALS constructor_list','type_def',4,'p_type_def','parser.py',490),
  ('constructor_list -> constructors','constructor_list',1,'p_constructor_list','parser.py',498),
  ('constructors -> constructors_begin constructor_end','constructors',2,'p_constructors','parser.py',506),
  ('constructors -> constructor_end','constructors',1,'p_constructors_one','parser.py',518),
  ('constructors_begin -> constructors_begin constructor','constructors_begin',2,'p_constructors_begin','parser.py',526),
  ('constructors_begin -> constructor','constructors_begin',1,'p_constructors_begin_one','parser.py',537),
  ('constructor_end -> constructor_one','constructor_end',1,'p_constructor_end','parser.py',548),
  ('constructor_one -> constructor_name constructor_param_list','constructor_one',2,'p_constructor_one','parser.py',556),
  ('constructor -> constructor_name constructor_param_list QUESTIONMARK','constructor',3,'p_constructor','parser.py',563),
  ('constructor_name -> ID','constructor_name',1,'p_constructor_name','parser.py',571),
  ('constructor_param_list -> empty','constructor_param_list',1,'p_constructor_param_list_empty','parser.py',579),
  ('constructor_param_list -> LPAREN constructor_params RPAREN','constructor_param_list',3,'p_constructor_param_list','parser.py',587),
  ('constructor_params -> constructor_params_begin constructor_param_end','constructor_params',2,'p_constructor_params','parser.py',595),
  ('constructor_params_begin -> constructor_params_begin constructor_param_one','constructor_params_begin',2,'p_constructor_params_begin','parser.py',603),
  ('constructor_params_begin -> constructor_param_one','constructor_params_begin',1,'p_constructor_params_begin_one','parser.py',611),
  ('constructor_param_end -> constructor_param','constructor_param_end',1,'p_constructor_param_end','parser.py',619),
  ('constructor_param_end -> empty','constructor_param_end',1,'p_constructor_param_end_empty','parser.py',627),
  ('constructor_param_one -> constructor_param COMMA','constructor_param_one',2,'p_constructor_param_one','parser.py',635),
  ('constructor_param -> type_name identifier','constructor_param',2,'p_constructor_param','parser.py',643),
  ('type_rename -> TYPE type_name EQUALS type_name','type_rename',4,'p_type_rename','parser.py',651),
  ('import_decl -> IMPORT identifier keyword_as keyword_except argument_list','import_decl',5,'p_import_decl','parser.py',659),
  ('keyword_as -> AS identifier','keyword_as',2,'p_keyword_as','parser.py',667),
  ('keyword_as -> empty','keyword_as',1,'p_keyword_as_empty','parser.py',675),
  ('keyword_except -> EXCEPT','keyword_except',1,'p_keyword_except','parser.py',683),
  ('keyword_except -> empty','keyword_except',1,'p_keyword_except_empty','parser.py',691),
  ('register_decl -> REGISTER LBRACKET identifier RBRACKET identifier keyword_as keyword_except argument_list','register_decl',8,'p_register_decl','parser.py',700),
  ('gen_structure -> gen_if_structure','gen_structure',1,'p_gen_structure','parser.py',709),
  ('gen_structure -> gen_case_structure','gen_structure',1,'p_gen_structure','parser.py',710),
  ('gen_structure -> gen_for_structure','gen_structure',1,'p_gen_structure','parser.py',711),
  ('gen_if_structure -> GIF expression COLON gsuite_indent gelifs gels','gen_if_structure',6,'p_gen_if_structure','parser.py',720),
  ('gelifs -> gelifs gelif_one','gelifs',2,'p_gelifs','parser.py',728),
  ('gelifs -> gelif_one','gelifs',1,'p_gelifs_one','parser.py',736),
  ('gelifs -> empty','gelifs',1,'p_gelifs_empty','parser.py',744),
  ('gelif_one -> GELIF expression COLON gsuite_indent','gelif_one',4,'p_gelif_one','parser.py',753),
  ('gels -> GELSE COLON gsuite_indent','gels',3,'p_gels','parser.py',762),
  ('gels -> empty','gels',1,'p_gels_empty','parser.py',770),
  ('gen_case_structure -> GCASE expression COLON case_list_indent','gen_case_structure',4,'p_gen_case_structure','parser.py',778),
  ('gen_for_structure -> GFOR identifier IN expression COLON gsuite_indent','gen_for_structure',6,'p_gen_for_structure','parser.py',786),
  ('gsuite_indent -> gsuite','gsuite_indent',1,'p_suite_indent_gen','parser.py',795),
  ('gsuite_indent -> NEWLINE INDENT gsuite DEDENT','gsuite_indent',4,'p_suite_indent_gen','parser.py',796),
  ('gsuite -> case_list','gsuite',1,'p_suite_gen','parser.py',808),
  ('gsuite -> gen_structure','gsuite',1,'p_suite_gen','parser.py',809),
  ('gsuite -> gexpression_stmt','gsuite',1,'p_suite_gen','parser.py',810),
  ('gexpression_stmt -> gexpression NEWLINE','gexpression_stmt',2,'p_expression_stmt_gen','parser.py',820),
  ('gexpression -> unary_operation','gexpression',1,'p_expression_gen','parser.py',828),
  ('gexpression -> binary_operation','gexpression',1,'p_expression_gen','parser.py',829),
  ('gexpression -> LPAREN expression RPAREN','gexpression',3,'p_expression_gen','parser.py',830),
  ('gexpression -> partial_selection','gexpression',1,'p_expression_gen','parser.py',831),
  ('gexpression -> tensor_list','gexpression',1,'p_expression_gen','parser.py',832),
  ('gexpression -> function_call','gexpression',1,'p_expression_gen','parser.py',833),
  ('gexpression -> pointer','gexpression',1,'p_expression_gen','parser.py',834),
  ('gexpression -> identifier','gexpression',1,'p_expression_gen','parser.py',835),
  ('gexpression -> const_expression','gexpression',1,'p_expression_gen','parser.py',836),
  ('gexpression -> OPERATOR','gexpression',1,'p_expression_gen','parser.py',837),
  ('pointer -> identifier tensor_list','pointer',2,'p_pointer','parser.py',849),
  ('context_def -> CONTEXT identifier inherit COLON declarations_indent','context_def',5,'p_context_def','parser.py',857),
  ('container_def -> CONTAINER identifier inherit parameterdef_list bus_list COLON declarations_indent','container_def',7,'p_container_def','parser.py',867),
  ('inherit -> LBRACE argument_end RBRACE','inherit',3,'p_inherit','parser.py',875),
  ('inherit -> LBRACE RBRACE','inherit',2,'p_inherit_brace','parser.py',883),
  ('inherit -> empty','inherit',1,'p_inherit_empty','parser.py',891),
  ('parameterdef_list -> LBRACKET parameterdefs RBRACKET','parameterdef_list',3,'p_parameterdef_list','parser.py',899),
  ('parameterdef_list -> LBRACKET RBRACKET','parameterdef_list',2,'p_parameterdef_list_bracket','parser.py',907),
  ('parameterdef_list -> empty','parameterdef_list',1,'p_parameterdef_list_empty','parser.py',915),
  ('parameterdefs -> parameterdefs_begin parameterdef_end','parameterdefs',2,'p_parameterdefs','parser.py',923),
  ('parameterdefs -> parameterdef_end','parameterdefs',1,'p_parameterdefs_one','parser.py',940),
  ('parameterdefs_begin -> parameterdefs_begin parameterdef','parameterdefs_begin',2,'p_parameterdefs_begin','parser.py',948),
  ('parameterdefs_begin -> parameterdef','parameterdefs_begin',1,'p_parameterdefs_begin_one','parser.py',959),
  ('parameterdef_end -> parameterdef_one','parameterdef_end',1,'p_parameterdef_end','parser.py',967),
  ('parameterdef_end -> empty','parameterdef_end',1,'p_parameterdef_end_empty','parser.py',975),
  ('parameterdef -> parameterdef_one COMMA','parameterdef',2,'p_parameterdef','parser.py',983),
  ('parameterdef_one -> type_name parameters','parameterdef_one',2,'p_parameterdef_one','parser.py',991),
  ('bus_list -> LPAREN buses RPAREN','bus_list',3,'p_bus_list','parser.py',999),
  ('bus_list -> LPAREN RPAREN','bus_list',2,'p_bus_list_paren','parser.py',1007),
  ('bus_list -> empty','bus_list',1,'p_bus_list_empty','parser.py',1015),
  ('buses -> buses_begin bus_end','buses',2,'p_buses','parser.py',1023),
  ('buses -> bus_end','buses',1,'p_buses_one','parser.py',1040),
  ('buses_begin -> buses_begin bus','buses_begin',2,'p_buses_begin','parser.py',1048),
  ('buses_begin -> bus','buses_begin',1,'p_buses_begin_one','parser.py',1057),
  ('bus_end -> bus_one','bus_end',1,'p_bus_end','parser.py',1065),
  ('bus_end -> empty','bus_end',1,'p_bus_end_empty','parser.py',1073),
  ('bus -> bus_one SEMICOLON','bus',2,'p_bus','parser.py',1081),
  ('bus_one -> bus_direction interface_name parameter_list arguments','bus_one',4,'p_bus_one_bus','parser.py',1089),
  ('bus_one -> port_direction typechain_one parameter_list arguments','bus_one',4,'p_bus_one_port','parser.py',1097),
  ('interface_name -> ID','interface_name',1,'p_interface_name','parser.py',1105),
  ('port_direction -> INPUT','port_direction',1,'p_port_direction','parser.py',1113),
  ('port_direction -> IN','port_direction',1,'p_port_direction','parser.py',1114),
  ('port_direction -> OUTPUT','port_direction',1,'p_port_direction','parser.py',1115),
  ('port_direction -> OUT','port_direction',1,'p_port_direction','parser.py',1116),
  ('port_direction -> INOUT','port_direction',1,'p_port_direction','parser.py',1117),
  ('declarations_indent -> declarations','declarations_indent',1,'p_declarations_indent','parser.py',1125),
  ('declarations_indent -> NEWLINE INDENT declarations DEDENT','declarations_indent',4,'p_declarations_indent','parser.py',1126),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','parser.py',1137),
  ('declarations -> declaration','declarations',1,'p_declarations_one','parser.py',1145),
  ('declaration -> variable_def','declaration',1,'p_declaration','parser.py',1154),
  ('declaration -> anonymous_function_def','declaration',1,'p_declaration','parser.py',1155),
  ('declaration -> instance_def','declaration',1,'p_declaration','parser.py',1156),
  ('structure -> if_structure','structure',1,'p_structure','parser.py',1165),
  ('structure -> case_structure','structure',1,'p_structure','parser.py',1166),
  ('structure -> for_structure','structure',1,'p_structure','parser.py',1167),
  ('variable_def -> keyword_variable types parameter_list pointer initial_value structure_maybe','variable_def',6,'p_variable_def','parser.py',1175),
  ('keyword_variable -> VARIABLE','keyword_variable',1,'p_keyword_variable','parser.py',1183),
  ('keyword_variable -> VAR','keyword_variable',1,'p_keyword_variable','parser.py',1184),
  ('structure_maybe -> COLON suite_indent','structure_maybe',2,'p_structure_maybe','parser.py',1192),
  ('structure_maybe -> empty','structure_maybe',1,'p_structure_maybe_empty','parser.py',1200),
  ('anonymous_function_def -> identifier EQUALS suite_indent','anonymous_function_def',3,'p_anonymous_function_def','parser.py',1209),
  ('instance_def -> keyword_instance identifier identifier parameter_list instance_port_list','instance_def',5,'p_instance_def','parser.py',1217),
  ('keyword_instance -> INSTANCE','keyword_instance',1,'p_keyword_instance','parser.py',1225),
  ('keyword_instance -> INS','keyword_instance',1,'p_keyword_instance','parser.py',1226),
  ('instance_port_list -> LPAREN instance_ports RPAREN','instance_port_list',3,'p_instance_port_list','parser.py',1234),
  ('instance_port_list -> empty','instance_port_list',1,'p_instance_port_list_empty','parser.py',1242),
  ('instance_ports -> instance_ports_begin instance_port_end','instance_ports',2,'p_instance_ports','parser.py',1250),
  ('instance_ports -> instance_port_end','instance_ports',1,'p_instance_ports_one','parser.py',1261),
  ('instance_ports_begin -> instance_ports_begin instance_port','instance_ports_begin',2,'p_instance_ports_begin','parser.py',1272),
  ('instance_ports_begin -> instance_port','instance_ports_begin',1,'p_instance_ports_begin_one','parser.py',1280),
  ('instance_port_end -> instance_port_one','instance_port_end',1,'p_instance_port_end','parser.py',1288),
  ('instance_port_end -> empty','instance_port_end',1,'p_instance_port_end_empty','parser.py',1296),
  ('instance_port -> instance_port_one COMMA','instance_port',2,'p_instance_port','parser.py',1304),
  ('instance_port_one -> instance_name','instance_port_one',1,'p_instance_port_one','parser.py',1312),
  ('instance_port_one -> input_instance_port','instance_port_one',1,'p_instance_port_one','parser.py',1313),
  ('instance_port_one -> output_instance_port','instance_port_one',1,'p_instance_port_one','parser.py',1314),
  ('instance_port_one -> inout_instance_port','instance_port_one',1,'p_instance_port_one','parser.py',1315),
  ('instance_name -> expression','instance_name',1,'p_instance_name','parser.py',1323),
  ('input_instance_port -> partial_selection LARROW expression','input_instance_port',3,'p_input_instance_port','parser.py',1331),
  ('output_instance_port -> partial_selection RARROW partial_selection','output_instance_port',3,'p_output_instance_port','parser.py',1339),
  ('inout_instance_port -> partial_selection BARROW partial_selection','inout_instance_port',3,'p_inout_instance_port','parser.py',1347),
  ('partial_selection -> identifier tensor_select_list','partial_selection',2,'p_partial_selection','parser.py',1356),
  ('tensor_select_list -> LBRACKET expression COLON expression RBRACKET','tensor_select_list',5,'p_tensor_select_list','parser.py',1365),
  ('tensor_select_list -> tensor_list','tensor_select_list',1,'p_tensor_select_list_one','parser.py',1373),
  ('interface_def -> INTERFACE bus_direction identifier inherit parameterdef_list COLON interface_bus_list_indent','interface_def',7,'p_interface_def','parser.py',1382),
  ('bus_direction -> MASTER','bus_direction',1,'p_bus_direction','parser.py',1390),
  ('bus_direction -> SLAVE','bus_direction',1,'p_bus_direction','parser.py',1391),
  ('interface_bus_list_indent -> interface_bus_list','interface_bus_list_indent',1,'p_interface_bus_list_indent','parser.py',1399),
  ('interface_bus_list_indent -> NEWLINE INDENT interface_bus_list DEDENT','interface_bus_list_indent',4,'p_interface_bus_list_indent','parser.py',1400),
  ('interface_bus_list -> interface_buses interface_bus','interface_bus_list',2,'p_interface_bus_list','parser.py',1410),
  ('interface_bus_list -> interface_bus','interface_bus_list',1,'p_interface_bus_list_one','parser.py',1417),
  ('interface_buses -> interface_bus','interface_buses',1,'p_interface_buses','parser.py',1424),
  ('interface_bus -> bus_one NEWLINE','interface_bus',2,'p_interface_bus','parser.py',1432),
  ('interface_bus -> bus_one','interface_bus',1,'p_interface_bus','parser.py',1433),
  ('parameter_list -> LBRACKET parameters RBRACKET','parameter_list',3,'p_parameter_list','parser.py',1441),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list_empty','parser.py',1449),
  ('parameters -> parameters_begin parameter_end','parameters',2,'p_parameters','parser.py',1457),
  ('parameters -> parameter_end','parameters',1,'p_parameters_one','parser.py',1468),
  ('parameters_begin -> parameters_begin parameter','parameters_begin',2,'p_parameters_begin','parser.py',1476),
  ('parameters_begin -> parameter','parameters_begin',1,'p_parameters_begin_one','parser.py',1484),
  ('parameter_end -> parameter_one','parameter_end',1,'p_parameter_end','parser.py',1492),
  ('parameter_end -> empty','parameter_end',1,'p_parameter_end_empty','parser.py',1500),
  ('parameter -> parameter_one COMMA','parameter',2,'p_parameter','parser.py',1508),
  ('parameter_one -> identifier tensor_list LARROW expression','parameter_one',4,'p_parameter_one','parser.py',1516),
  ('parameter_one -> identifier tensor_list','parameter_one',2,'p_parameter_one_no_expr','parser.py',1524),
  ('parameter_one -> expression','parameter_one',1,'p_parameter_number','parser.py',1532),
  ('tensor_list -> LBRACKET expressions RBRACKET','tensor_list',3,'p_tensor_list','parser.py',1540),
  ('tensor_list -> empty','tensor_list',1,'p_tensor_list_empty','parser.py',1548),
  ('if_structure -> IF expression COLON suite_indent elifs els','if_structure',6,'p_if_structure','parser.py',1556),
  ('elifs -> elifs elif_one','elifs',2,'p_elifs','parser.py',1564),
  ('elifs -> elif_one','elifs',1,'p_elifs_one','parser.py',1572),
  ('elifs -> empty','elifs',1,'p_elifs_empty','parser.py',1580),
  ('elif_one -> ELIF expression COLON suite_indent','elif_one',4,'p_elif_one','parser.py',1589),
  ('els -> ELSE COLON suite_indent','els',3,'p_els','parser.py',1598),
  ('els -> empty','els',1,'p_els_empty','parser.py',1606),
  ('case_structure -> CASE expression COLON case_list_indent','case_structure',4,'p_case_structure','parser.py',1614),
  ('for_structure -> FOR identifier IN expression COLON suite_indent','for_structure',6,'p_for_structure','parser.py',1622),
  ('suite_indent -> suite','suite_indent',1,'p_suite_indent','parser.py',1631),
  ('suite_indent -> NEWLINE INDENT suite DEDENT','suite_indent',4,'p_suite_indent','parser.py',1632),
  ('suite -> structure','suite',1,'p_suite','parser.py',1644),
  ('suite -> expression_stmt','suite',1,'p_suite','parser.py',1645),
  ('case_list_indent -> case_list','case_list_indent',1,'p_case_list_indent','parser.py',1653),
  ('case_list_indent -> NEWLINE INDENT case_list DEDENT','case_list_indent',4,'p_case_list_indent','parser.py',1654),
  ('case_list -> case_list case_entry','case_list',2,'p_case_list','parser.py',1665),
  ('case_list -> case_entry','case_list',1,'p_case_list','parser.py',1666),
  ('case_entry -> expression COLON suite_indent','case_entry',3,'p_case_entry','parser.py',1680),
  ('case_entry -> gen_structure','case_entry',1,'p_case_entry_gen','parser.py',1688),
  ('expression_stmt -> expression NEWLINE','expression_stmt',2,'p_expression_stmt','parser.py',1707),
  ('expression_stmt -> expression','expression_stmt',1,'p_expression_stmt','parser.py',1708),
  ('expressions -> expressions_begin expression_end','expressions',2,'p_expressions','parser.py',1716),
  ('expressions -> expression_end','expressions',1,'p_expressions_one','parser.py',1724),
  ('expressions_begin -> expressions_begin expression_comma','expressions_begin',2,'p_expressions_begin','parser.py',1732),
  ('expressions_begin -> expression_comma','expressions_begin',1,'p_expressions_begin_one','parser.py',1740),
  ('expression_end -> expression','expression_end',1,'p_expression_end','parser.py',1748),
  ('expression_comma -> expression COMMA','expression_comma',2,'p_expression_comma','parser.py',1756),
  ('initial_value -> LARROW expression','initial_value',2,'p_initial_value','parser.py',1764),
  ('expression -> unary_operation','expression',1,'p_expression','parser.py',1773),
  ('expression -> binary_operation','expression',1,'p_expression','parser.py',1774),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',1775),
  ('expression -> partial_selection','expression',1,'p_expression','parser.py',1776),
  ('expression -> tensor_list','expression',1,'p_expression','parser.py',1777),
  ('expression -> function_call','expression',1,'p_expression','parser.py',1778),
  ('expression -> pointer','expression',1,'p_expression','parser.py',1779),
  ('expression -> identifier','expression',1,'p_expression','parser.py',1780),
  ('expression -> const_expression','expression',1,'p_expression','parser.py',1781),
  ('expression -> operator_decl','expression',1,'p_expression','parser.py',1782),
  ('operator_decl -> OPERATOR','operator_decl',1,'p_operator_decl','parser.py',1794),
  ('unary_operation -> OPERATOR expression','unary_operation',2,'p_unary_operation','parser.py',1802),
  ('binary_operation -> expression OPERATOR expression','binary_operation',3,'p_binary_operation','parser.py',1810),
  ('function_call -> identifier instance_port_list','function_call',2,'p_function_call','parser.py',1819),
  ('const_expression -> int_number','const_expression',1,'p_const_expression','parser.py',1828),
  ('const_expression -> float_number','const_expression',1,'p_const_expression','parser.py',1829),
  ('const_expression -> string_literal','const_expression',1,'p_const_expression','parser.py',1830),
  ('int_number -> INTNUMBER_DEC','int_number',1,'p_int_number','parser.py',1839),
  ('int_number -> SIGNED_INTNUMBER_DEC','int_number',1,'p_int_number','parser.py',1840),
  ('int_number -> INTNUMBER_BIN','int_number',1,'p_int_number','parser.py',1841),
  ('int_number -> SIGNED_INTNUMBER_BIN','int_number',1,'p_int_number','parser.py',1842),
  ('int_number -> INTNUMBER_OCT','int_number',1,'p_int_number','parser.py',1843),
  ('int_number -> SIGNED_INTNUMBER_OCT','int_number',1,'p_int_number','parser.py',1844),
  ('int_number -> INTNUMBER_HEX','int_number',1,'p_int_number','parser.py',1845),
  ('int_number -> SIGNED_INTNUMBER_HEX','int_number',1,'p_int_number','parser.py',1846),
  ('string_literal -> STRING_LITERAL','string_literal',1,'p_string_literal','parser.py',1855),
  ('float_number -> FLOATNUMBER','float_number',1,'p_float_number','parser.py',1864),
  ('identifier -> scopes ID','identifier',2,'p_identifier','parser.py',1873),
  ('identifier -> ID','identifier',1,'p_identifier','parser.py',1874),
  ('scopes -> scopes scope','scopes',2,'p_scopes','parser.py',1885),
  ('scopes -> scope','scopes',1,'p_scopes','parser.py',1886),
  ('scope -> ID DOT','scope',2,'p_scope','parser.py',1896),
  ('scope -> pointer DOT','scope',2,'p_scope_pointer','parser.py',1904),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1912),
]
